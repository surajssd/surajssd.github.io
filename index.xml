<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Suraj Deshmukh</title>
    <link>https://suraj.io/</link>
    <description>Recent content on Suraj Deshmukh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jun 2019 15:15:07 +0530</lastBuildDate>
    
	<atom:link href="https://suraj.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Capabilities on executables</title>
      <link>https://suraj.io/post/linux-cap-note/</link>
      <pubDate>Tue, 25 Jun 2019 15:15:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/linux-cap-note/</guid>
      <description>File capabilities allow users to execute programs with higher privileges. Best example is network utility ping.
A ping binary has capabilities CAP_NET_ADMIN and CAP_NET_RAW. A normal user doesn&amp;rsquo;t have CAP_NET_ADMIN privilege, since the executable file ping has that capability you can run it.
$ getcap `which ping` /usr/bin/ping = cap_net_admin,cap_net_raw+p  Which normally works as follows:
$ ping -c 1 1.1.1.1 PING 1.1.1.1 (1.1.1.1) 56(84) bytes of data. 64 bytes from 1.</description>
    </item>
    
    <item>
      <title>Root user inside container is root on the host</title>
      <link>https://suraj.io/post/root-in-container-root-on-host/</link>
      <pubDate>Tue, 25 Jun 2019 11:57:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/root-in-container-root-on-host/</guid>
      <description>Here are simple steps that you can follow to prove that the root user inside container is also root on the host. And how to mitigate this.
Root in container, root on host I have a host with docker daemon running on it. I start a normal container on it with sleep process as PID1. See in the following output that the container clever_lalande started with sleep process.
$ docker run -d --rm alpine sleep 9999 6c541cf8f7b315783d2315eebc2f7dddd1f7b26f427e182f8597b10f2746ab0b $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6c541cf8f7b3 alpine &amp;quot;sleep 9999&amp;quot; 12 seconds ago Up 11 seconds clever_lalande  Now let&amp;rsquo;s find out the process sleep on the host.</description>
    </item>
    
    <item>
      <title>Project specific scripts</title>
      <link>https://suraj.io/post/project-specific-scripts/</link>
      <pubDate>Sun, 23 Jun 2019 11:57:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/project-specific-scripts/</guid>
      <description>There are always scripts that you write to automate some mundane tasks. And then you put that script in a directory that is in your PATH. But what this does is that it pollutes your system global PATH and shows up in places you wouldn&amp;rsquo;t want it to be in.
I was struggling with this issue for a while and struggling to get a proper solution. But there is a very simple and clever trick to solve this problem.</description>
    </item>
    
    <item>
      <title>Copying files to container the generic way</title>
      <link>https://suraj.io/post/copy-to-container-without-docker-cp/</link>
      <pubDate>Fri, 21 Jun 2019 11:57:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/copy-to-container-without-docker-cp/</guid>
      <description>This blog shows you how you can copy stuff from your host machine to the running container without the docker cp command that we usually use.
Steps in text Here I have a script on the host, which looks following:
#!/bin/bash tput bold echo &amp;quot;OS Information:&amp;quot; tput sgr0 echo cat /etc/os-release  After running which looks like following:
$ ls script.sh $ ./script.sh OS Information: NAME=&amp;quot;Flatcar Linux by Kinvolk&amp;quot; ID=flatcar ID_LIKE=coreos VERSION=2079.</description>
    </item>
    
    <item>
      <title>Writing your own Seccomp profiles for Docker</title>
      <link>https://suraj.io/post/docker-seccomp-manual/</link>
      <pubDate>Mon, 10 Jun 2019 11:57:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/docker-seccomp-manual/</guid>
      <description>What is Seccomp?  A large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. A certain subset of userland applications benefit by having a reduced set of available system calls. The resulting set reduces the total kernel surface exposed to the application. System call filtering is meant for use with those applications. Seccomp filtering provides a means for a process to specify a filter for incoming system calls.</description>
    </item>
    
    <item>
      <title>Suraj Deshmukh&#39;s talks at conferences</title>
      <link>https://suraj.io/post/surajd-talks-links/</link>
      <pubDate>Mon, 22 Apr 2019 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/surajd-talks-links/</guid>
      <description> Hardening Kubernetes by Securing Pods - Rootconf 2019   State of Kubernetes Meetups - DevOpsDays India 2017   Making Kubernetes Simple For Developers - Rootconf 2017   Taking docker-compose to Production - Gophercon 2017 Lightening talk Watch from 55m59s
  </description>
    </item>
    
    <item>
      <title>Kubernetes Bangalore March 2019 Event Report</title>
      <link>https://suraj.io/post/k8s-blr-event-report-2019-03-16/</link>
      <pubDate>Thu, 21 Mar 2019 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/k8s-blr-event-report-2019-03-16/</guid>
      <description>The Kubernetes Bangalore Meetup was organized at Arvind Internet on Feb 16th 2019. The agenda for the meetup was to teach Kubernetes to the beginners.
Meetup agenda can be found here.
The moments from Meetup:
We go online in sometime here https://t.co/FkwgOx0Tm4
&amp;mdash; Kubernetes Bangalore (@k8sBLR) March 16, 2019  .@pmishra1598 kick started the Meetup by explaining what #Kubernetes is! Currently clarifying what a pod is. pic.twitter.com/Ny7bN9c62x
&amp;mdash; Kubernetes Bangalore (@k8sBLR) March 16, 2019  Huge turnout at today&amp;#39;s meetup it&amp;#39;s on ðŸ”¥ðŸ”¥ pic.</description>
    </item>
    
    <item>
      <title>Make static configs available for apiserver in minikube</title>
      <link>https://suraj.io/post/apiserver-in-minikube-static-configs/</link>
      <pubDate>Sun, 20 Jan 2019 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/apiserver-in-minikube-static-configs/</guid>
      <description>If you want to provide extra flags to the kube-apiserver that runs inside minikube how do you do it? You can use the minikube&amp;rsquo;s --extra-config flag with apiserver.&amp;lt;apiserver flag&amp;gt;=&amp;lt;value&amp;gt;, for e.g. if you want to enable RBAC authorization mode you do it as follows:
--extra-config=apiserver.authorization-mode=RBAC  So this is a no brainer when doing it for flags whose value can be given right away, like the one above. But what if you want to provide value which is a file path.</description>
    </item>
    
    <item>
      <title>Recreate Kubernetes CVE-2017-1002101</title>
      <link>https://suraj.io/post/cve-2017-1002101-subpath-volume-mount-recreate/</link>
      <pubDate>Mon, 14 Jan 2019 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/cve-2017-1002101-subpath-volume-mount-recreate/</guid>
      <description>A volume mount CVE was discovered in Kubernetes 1.9 and older which allowed access to node file system using emptyDir volume mount using subpath. The official description goes as follows:
 In Kubernetes versions 1.3.x, 1.4.x, 1.5.x, 1.6.x and prior to versions 1.7.14, 1.8.9 and 1.9.4 containers using subpath volume mounts with any volume type (including non-privileged pods, subject to file permissions) can access files/directories outside of the volume, including the host&amp;rsquo;s filesystem.</description>
    </item>
    
    <item>
      <title>Cobra and Persistentflags gotchas</title>
      <link>https://suraj.io/post/cobra-persistent-flag/</link>
      <pubDate>Fri, 04 Jan 2019 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/cobra-persistent-flag/</guid>
      <description>If you are using cobra cmd line library for golang applications and it&amp;rsquo;s PersistentFlags and if you have a use case where you are adding same kind of flag in multiple places. You might burn your fingers in that case, if you keep adding it in multiple sub-commands without giving it a second thought. To understand what is really happening and why it is happening follow along.
All the code referenced here can be found here https://github.</description>
    </item>
    
    <item>
      <title>Old laptop setup reference</title>
      <link>https://suraj.io/post/old-laptop-setup/</link>
      <pubDate>Sun, 30 Dec 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/old-laptop-setup/</guid>
      <description>I have this old PC Dell Inspiron 1525 with 2GB RAM and 32 bit dual core processor and I wanted to install fedora on it, but I cam accross few problems which I am documenting for further reference.
Wifi device not detected The wifi drivers are not loaded by default, so followed this blog, basically do following:
export FIRMWARE_INSTALL_DIR=&amp;quot;/lib/firmware&amp;quot; wget http://mirror2.openwrt.org/sources/broadcom-wl-5.100.138.tar.bz2 tar xjf broadcom-wl-5.100.138.tar.bz2 cd broadcom-wl-5.100.138/linux/ sudo b43-fwcutter -w /lib/firmware wl_apsta.</description>
    </item>
    
    <item>
      <title>Add new Node to k8s cluster with Bootstrap token</title>
      <link>https://suraj.io/post/add-new-k8s-node-bootstrap-token/</link>
      <pubDate>Wed, 24 Oct 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/add-new-k8s-node-bootstrap-token/</guid>
      <description>Few days back I wrote a blog about adding new node to the cluster using the static token file. The problem with that approach is that you need to restart kube-apiserver providing it the path to the token file. Here we will see how to use the bootstrap token, which is very dynamic in nature and can be controlled by using Kubernetes resources like secrets.
So if you are following Kubernetes the Hard Way to set up the cluster here are the changes you should do to adapt it to run with bootstrap token.</description>
    </item>
    
    <item>
      <title>PodSecurityPolicy on existing Kubernetes clusters</title>
      <link>https://suraj.io/post/psp-on-existing-cluster/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/psp-on-existing-cluster/</guid>
      <description>I enabled PodSecurityPolicy on a minikube cluster by appending PodSecurityPolicy to the apiserver flag in minikube like this:
--extra-config=apiserver.enable-admission-plugins=Initializers,NamespaceLifecycle,\ LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,\ NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,\ ResourceQuota,PodSecurityPolicy  Ideally when you have PSP enabled and if you don&amp;rsquo;t define any PSP and authorize it with right RBAC no pod will start in the cluster. But what I saw was that there were some pods still running in kube-system namespace.
$ kubectl -n kube-system get pods NAME READY STATUS RESTARTS AGE coredns-576cbf47c7-g2t8v 1/1 Running 4 5d11h etcd-minikube 1/1 Running 2 5d11h heapster-bn5xp 1/1 Running 2 5d11h influxdb-grafana-qzpv4 2/2 Running 4 5d11h kube-addon-manager-minikube 1/1 Running 2 5d11h kube-controller-manager-minikube 1/1 Running 1 4d20h kube-scheduler-minikube 1/1 Running 2 5d11h kubernetes-dashboard-5bb6f7c8c6-9d564 1/1 Running 8 5d11h storage-provisioner 1/1 Running 7 5d11h  Which got me thinking what is wrong with the way PSPs work.</description>
    </item>
    
    <item>
      <title>Road to CKA</title>
      <link>https://suraj.io/post/road-to-cka/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/road-to-cka/</guid>
      <description>I passed CKA exam with 92% marks on 19th October 2018.
A lot of folks are curious about how to prepare and what resources to follow. Here is my list of things to do and list of resources that might help you on successful CKA exam.
The duration of exam is three hours, which is enough time if you do good practice. The exam is pretty straight forward and tests your Kubernetes hands-on knowledge, so whatever you read please try to do it on a real cluster.</description>
    </item>
    
    <item>
      <title>How to disable your Chrome Ctrl &#43; W keybinding</title>
      <link>https://suraj.io/post/disable-ctrl-w/</link>
      <pubDate>Tue, 16 Oct 2018 22:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/disable-ctrl-w/</guid>
      <description>I am about to attempt the CKA exam and it has a browser based terminal. And I am used to this terminal shortcut Ctrl + W which deletes a word. But the same shortcut in browser can close a tab. Since this exam is combination of both I am afraid I might close my exam tab while deleting a word in terminal. Now the only solution to this is disabling the shortcut in chrome.</description>
    </item>
    
    <item>
      <title>Add new Node to k8s cluster with cert rotation</title>
      <link>https://suraj.io/post/add-new-k8s-node-cert-rotate/</link>
      <pubDate>Tue, 16 Oct 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/add-new-k8s-node-cert-rotate/</guid>
      <description>The setup here is created by following Kubernetes the Hard Way by Kelsey Hightower. So if you are following along in this then do all the setup till the step Bootstrapping the Kubernetes Worker Nodes. In this just don&amp;rsquo;t start the kubelet, start other services like containerd and kube-proxy.
master node Following the docs of TLS Bootstrapping, let&amp;rsquo;s first create the token authentication file. Create a file with following content:</description>
    </item>
    
    <item>
      <title>Adding new worker to existing Kubernetes cluster</title>
      <link>https://suraj.io/post/add-new-k8s-node-manually/</link>
      <pubDate>Sun, 23 Sep 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/add-new-k8s-node-manually/</guid>
      <description>To setup a multi-node Kubernetes cluster just run this script and you will have a cluster with 3 masters and 3 workers.
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME worker-0 Ready &amp;lt;none&amp;gt; 1h v1.11.2 192.168.199.20 &amp;lt;none&amp;gt; Ubuntu 18.04.1 LTS 4.15.0-33-generic cri-o://1.11.2 worker-1 Ready &amp;lt;none&amp;gt; 1h v1.11.2 192.168.199.21 &amp;lt;none&amp;gt; Ubuntu 18.04.1 LTS 4.15.0-33-generic cri-o://1.11.2 worker-2 Ready &amp;lt;none&amp;gt; 1h v1.11.2 192.168.199.22 &amp;lt;none&amp;gt; Ubuntu 18.</description>
    </item>
    
    <item>
      <title>Single node Kubernetes Cluster on Fedora with SELinux enabled</title>
      <link>https://suraj.io/post/single-node-k8s-fedora-selinux/</link>
      <pubDate>Tue, 11 Sep 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/single-node-k8s-fedora-selinux/</guid>
      <description>Start a single node fedora machine, using whatever method but I have used this Vagrantfile to do it:
# -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.configure(&amp;quot;2&amp;quot;) do |config| config.vm.define &amp;quot;fedora&amp;quot; do |fedora| fedora.vm.box = &amp;quot;fedora/28-cloud-base&amp;quot; config.vm.hostname = &amp;quot;fedora&amp;quot; end config.vm.provider &amp;quot;virtualbox&amp;quot; do |virtualbox, override| virtualbox.memory = 4096 virtualbox.cpus = 4 end config.vm.provision &amp;quot;shell&amp;quot;, privileged: false, inline: &amp;lt;&amp;lt;-SHELL echo &#39;127.0.0.1 localhost&#39; | cat - /etc/hosts &amp;gt; temp &amp;amp;&amp;amp; sudo mv temp /etc/hosts SHELL end  Now start it and ssh into it:</description>
    </item>
    
    <item>
      <title>HostPath volumes and it&#39;s problems</title>
      <link>https://suraj.io/post/k8s-hostpat-nuke-nodes/</link>
      <pubDate>Mon, 10 Sep 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/k8s-hostpat-nuke-nodes/</guid>
      <description>This post will demonstrate how Kubernetes HostPath volumes can help you get access to the Kubernetes nodes. Atleast you can play with the filesystem of the node on which you pod is scheduled on. You can get access to other containers running on the host, certificates of the kubelet, etc.
I have a 3-master and 3-node cluster and setup using this script, running in a Vagrant environment.
All the nodes are in ready state:</description>
    </item>
    
    <item>
      <title>HTTPS during development using &#39;mkcert&#39;</title>
      <link>https://suraj.io/post/mkcert-using-python-http-server/</link>
      <pubDate>Tue, 14 Aug 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/mkcert-using-python-http-server/</guid>
      <description>It&amp;rsquo;s always a hassle creating certificates and lot of technical jargons involved. This can be simplified, using mkcert. Install by following one of the steps mentioned in the docs.
Once installed just run:
$ mkcert -install Created a new local CA at &amp;quot;/home/hummer/.local/share/mkcert&amp;quot; ðŸ’¥ [sudo] password for hummer: The local CA is now installed in the system trust store! âš¡ The local CA is now installed in the Firefox and/or Chrome/Chromium trust store (requires browser restart)!</description>
    </item>
    
    <item>
      <title>Golang struct tags gotchas</title>
      <link>https://suraj.io/post/golang-struct-tags-space/</link>
      <pubDate>Sun, 12 Aug 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/golang-struct-tags-space/</guid>
      <description>In golang while using struct tag, the spaces make a lot of difference. For example look at the following code.
type PodStatus struct { Status string `json: &amp;quot;,status&amp;quot;` }  If you run go vet on this piece of code you will get following error:
$ go vet types.go # command-line-arguments ./types.go:28: struct field tag `json: &amp;quot;,status&amp;quot;` not compatible with reflect.StructTag.Get: bad syntax for struct tag value  Now this does not tell us what is wrong with the struct tag, json: &amp;quot;,status&amp;quot;.</description>
    </item>
    
    <item>
      <title>Access etcd in OpenShift origin</title>
      <link>https://suraj.io/post/accessing-oc-cluster-up-etcd/</link>
      <pubDate>Wed, 11 Jul 2018 01:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/accessing-oc-cluster-up-etcd/</guid>
      <description>How do you access the etcd that is being used by the OpenShift started by oc cluster up or using minishift.
If you are using minishift then get docker environment access of the minishift VM by running following commands.
eval $(minishift docker-env) &amp;amp;&amp;amp; eval $(minishift oc-env)  Exec into the container named origin that runs OpenShift and all the needed services.
$ docker exec -it origin bash  First install the etcdctl needed to talk to etcd.</description>
    </item>
    
    <item>
      <title>Change namespaces in Kubernetes</title>
      <link>https://suraj.io/post/changing-k8s-ns/</link>
      <pubDate>Mon, 02 Jul 2018 08:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/changing-k8s-ns/</guid>
      <description>There is no easy way to change namespace in Kubernetes using kubectl command line utility. But here are some commands that you can alias in your bashrc file so that it&amp;rsquo;s just a single command that you can use to change the namespace in the Kubernetes cluster.
Change namespace Let&amp;rsquo;s see step by step what goes in to change the namespace. So the first step is to find the context.</description>
    </item>
    
    <item>
      <title>Prometheus with existing application on OpenShift</title>
      <link>https://suraj.io/post/using-prometheus/</link>
      <pubDate>Wed, 04 Apr 2018 08:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/using-prometheus/</guid>
      <description>This post is very specific to OpenShift and how you can have an application exposing prometheus metrics to be scraped by a prometheus running in the same cluster.
Requirements Setting up cluster I have done it using the oc cluster up, read about how to do this here. You could also setup a local OpenShift cluster by running minishift, read about setting up minishift here.
Downloading Kedge The configurations defined for setting up this cluster is written in a format that is understood by a tool called Kedge.</description>
    </item>
    
    <item>
      <title>Notes on talk - Advanced testing in golang by Mitchell Hashimoto</title>
      <link>https://suraj.io/post/advanced-golang-testing-mitchellh-talk-notes/</link>
      <pubDate>Wed, 07 Mar 2018 02:21:49 +0530</pubDate>
      
      <guid>https://suraj.io/post/advanced-golang-testing-mitchellh-talk-notes/</guid>
      <description>Test Fixtures  &amp;ldquo;go test&amp;rdquo; sets pwd as package directory  Test Helpers  should never return an error they should access to the *testing.T object call t.Helper() in the beginning (works only for go1.9+) for things reqiuiring clean up return closures  Configurability  Unconfigurable behavior is often a point of difficulty for tests. e.g. ports, timeouts, paths. Over-parameterize structs to allow tests to fine-tune their behavior It&amp;rsquo;s ok to make these configs unexported so only tests can set them.</description>
    </item>
    
    <item>
      <title>Methods that satisfy interfaces in golang</title>
      <link>https://suraj.io/post/golang-methods-interfaces/</link>
      <pubDate>Fri, 23 Feb 2018 08:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/golang-methods-interfaces/</guid>
      <description>Pointer receiver For a struct User with a method Work with pointer receiver.
type User struct { Name string Period int } func (u *User) Work() { fmt.Println(u.Name, &amp;quot;has worked for&amp;quot;, u.Period, &amp;quot;hrs.&amp;quot;) } func main() { uval := User{&amp;quot;UserVal&amp;quot;, 5} uval.Work() pval := &amp;amp;User{&amp;quot;UserPtr&amp;quot;, 6} pval.Work() }  See on go playground.
output:
UserVal has worked for 5 hrs. UserPtr has worked for 6 hrs.  If we call this method on value type object uval it works, and obviously it works with pointer type object pval.</description>
    </item>
    
    <item>
      <title>vscode Shortcuts</title>
      <link>https://suraj.io/post/vscode-shortcuts/</link>
      <pubDate>Thu, 22 Feb 2018 08:00:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/vscode-shortcuts/</guid>
      <description>This post has shortcuts that are generic and golang specific as well. This post will edited from time to time.
Shortcuts  Toggle side bar  Ctrl + B
 Project explorer in side bar  Ctrl + Shift + E
 Project wide search in side bar  Ctrl + Shift + F
 Source control in side bar  Ctrl + Shift + G
 Copy entire line  Ctrl + C (without any selection)</description>
    </item>
    
    <item>
      <title>Using private container registries from minikube</title>
      <link>https://suraj.io/post/private-registry-from-minikube/</link>
      <pubDate>Fri, 06 Oct 2017 19:32:33 +0530</pubDate>
      
      <guid>https://suraj.io/post/private-registry-from-minikube/</guid>
      <description>I am doing Kubernetes native development using minikube. And for doing that I had to download a Container image that is available in internally hosted private container registry.
On the configuration side of doing that you will need to create Kubernetes Secret of type docker-registry. And now refer that secret you just created in your Pod manifest under pod.spec.imagePullSecrets. For more info follow the tutorial in Kubernetes docs on Pull an Image from a Private Registry.</description>
    </item>
    
    <item>
      <title>Static Pods using Kubelet on Fedora</title>
      <link>https://suraj.io/post/static-pods/</link>
      <pubDate>Sat, 23 Sep 2017 13:10:14 +0530</pubDate>
      
      <guid>https://suraj.io/post/static-pods/</guid>
      <description>I wanted to try out Standalone Kubelet Tutorial of Kelsey Hightower by myself but I could not follow it as it is, because it was firstly on GCE and secondly it uses CoreOS, but since I am very familiar to Fedora I thought of following that tutorial on it. To get a quick setup of a fresh Fedora machine use Vagrant. I have used Vagrantfile available here.
This blog is only replacement of section Install the Standalone Kubelet in tutorial.</description>
    </item>
    
    <item>
      <title>Sharing Vagrant Box offline</title>
      <link>https://suraj.io/post/move-vagrant-boxes/</link>
      <pubDate>Mon, 18 Sep 2017 10:43:46 +0530</pubDate>
      
      <guid>https://suraj.io/post/move-vagrant-boxes/</guid>
      <description>If you have some box that was downloaded on your machine from Atlas but now you wanna share it on other machines and you don&amp;rsquo;t have internet to download it, how do you share it?
You will need to export the box from machine that has it downloaded already. So on machine with boxes:
$ vagrant box list centos/7 (libvirt, 1610.01) centos/7 (libvirt, 1704.01) fedora/25-cloud-base (libvirt, 20161122) fedora/26-cloud-base (libvirt, 20170705)  I wanted to share fedora/26-cloud-base box to another machine.</description>
    </item>
    
    <item>
      <title>Add new Maps to Counter Strike</title>
      <link>https://suraj.io/post/add-new-map-to-cs/</link>
      <pubDate>Fri, 01 Sep 2017 16:03:58 +0530</pubDate>
      
      <guid>https://suraj.io/post/add-new-map-to-cs/</guid>
      <description>If you are playing Counter Strike on Steam on linux you might be wondering how do I install new maps in the game. So here are steps to install maps.
All the game maps for Counter Strike - Condition Zero are stored in following path:
~/.local/share/Steam/steamapps/common/Half-Life/czero/maps  Format of the map files is .bsp.
So download the map files from over internet and then put in this location and now you should be able to see the maps in game.</description>
    </item>
    
    <item>
      <title>List of Kubernetes Bangalore meetup event report</title>
      <link>https://suraj.io/post/list-all-k8s-meetups/</link>
      <pubDate>Fri, 01 Sep 2017 15:51:16 +0530</pubDate>
      
      <guid>https://suraj.io/post/list-all-k8s-meetups/</guid>
      <description>List of all the event reports from Kubernetes Bangalore meetup.
 April 2017 May 2017 June 2017 July 2017 Kubernetes 2nd Birthday Celebration August 2017 September 2017 October 2017 November 2017  </description>
    </item>
    
    <item>
      <title>Kubernetes Learning resources</title>
      <link>https://suraj.io/post/k8s-learning-resources/</link>
      <pubDate>Thu, 17 Aug 2017 23:12:18 +0530</pubDate>
      
      <guid>https://suraj.io/post/k8s-learning-resources/</guid>
      <description>Following is the list of all the places you can learn Kubernetes from:
 Scalable Microservices with Kubernetes - Video tutorial Fundamentals of Containers, Kubernetes, and Red Hat OpenShift - Video tutorial Kubernetes By Example - DIY tutorial Learn Kubernetes using Interactive Browser-Based Scenarios - DIY tutorial in your own web browser Interactive Learning Portal for OpenShift - DIY tutorial in your own web browser Kubernetes docs - Textual DIY docs Kubernetes API reference v1.</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup July 2017</title>
      <link>https://suraj.io/post/blr-k8s-meetup-july-2017/</link>
      <pubDate>Thu, 13 Jul 2017 22:46:40 +0530</pubDate>
      
      <guid>https://suraj.io/post/blr-k8s-meetup-july-2017/</guid>
      <description>This edition of meetup was held at Nexus Ventures by folks at OpenEBS on July 8th 2017, which started on a lovely Saturday morning.
Kiran Mova set the floor rolling with his talk on Hyperconverged version of OpenEBS with Kubernetes. Where he talked about containerized storage vs traditional storage, instead of building clustering into OpenEBS how they are leveraging Kubernetes&amp;rsquo;s capabilities to do clustering.
He also explained difference between various storage providers viz.</description>
    </item>
    
    <item>
      <title>Clean Node setup</title>
      <link>https://suraj.io/post/node-no-sudo/</link>
      <pubDate>Tue, 04 Jul 2017 22:50:43 +0530</pubDate>
      
      <guid>https://suraj.io/post/node-no-sudo/</guid>
      <description>Make sure you have npm installed.
$ sudo dnf -y install npm Package npm-1:3.10.10-1.6.10.3.1.fc25.x86_64 is already installed, skipping. Dependencies resolved. Nothing to do. Complete!  Taken from this post.
mkdir &amp;quot;${HOME}/.npm-packages&amp;quot; echo &#39;prefix=${HOME}/.npm-packages&#39; | tee -a ~/.npmrc echo &#39; #====================================== # npm related stuff NPM_PACKAGES=&amp;quot;${HOME}/.npm-packages&amp;quot; PATH=&amp;quot;$NPM_PACKAGES/bin:$PATH&amp;quot; # Unset manpath so we can inherit from /etc/manpath via the `manpath` command unset MANPATH # delete if you already modified MANPATH elsewhere in your config export MANPATH=&amp;quot;$NPM_PACKAGES/share/man:$(manpath)&amp;quot; #====================================== &#39; | tee -a ~/.</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup May 2017</title>
      <link>https://suraj.io/post/blr-k8s-meetup-may-2017/</link>
      <pubDate>Wed, 24 May 2017 02:21:49 +0530</pubDate>
      
      <guid>https://suraj.io/post/blr-k8s-meetup-may-2017/</guid>
      <description>&amp;ldquo;One does not simply deploy containers to production&amp;rdquo;
With the rising craze around the container community in Bangalore and relative lack in awareness around different container technologies like Kubernetes and OpenShift, an effort was made in imparting knowledge in this direction.
So, this time around newbies were targeted for the Kubernetes Meetup.
With the above objective, it was decided to have a Kubernetes 101 workshop at Red Hat Bangalore office on May 21, 2017 to familiarize people with concepts of Kubernetes and OpenShift and their usage and relevance as container orchestration tools for managing application deployments.</description>
    </item>
    
    <item>
      <title>Enabling local development with Kubernetes</title>
      <link>https://suraj.io/post/enabling-local-development-with-k8s/</link>
      <pubDate>Sun, 23 Apr 2017 15:57:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/enabling-local-development-with-k8s/</guid>
      <description>I want to show how you can enable Kubernetes in your day to day development workflow. So that you get the feel of production deployment locally from day 1.
I have a flask application which I am working on. The basic directory structure looks like this:
$ ll total 24 -rw-rw-r--. 1 foo foo 427 Apr 23 16:23 app.py -rw-rw-r--. 1 foo foo 201 Apr 23 16:55 docker-compose.yml -rw-rw-r--. 1 foo foo 363 Apr 23 16:21 Dockerfile -rwxrwxr-x.</description>
    </item>
    
    <item>
      <title>Quick PV for local Kubernetes cluster</title>
      <link>https://suraj.io/post/quick-pv-for-local-k8s/</link>
      <pubDate>Tue, 18 Apr 2017 23:56:15 +0530</pubDate>
      
      <guid>https://suraj.io/post/quick-pv-for-local-k8s/</guid>
      <description>I do lot of Kubernetes related work either on minikube or local OpenShift cluster setup in a VM. Often I need to create a PersistentVolumeClaim a.k.a. pvc. But to use pvc you have to have a PersistentVolume or pv defined.
Enter into the machine running k8s If using minikube you can do
minikube ssh  Create a local directory for storage mkdir /tmp/pv0001 chmod 777 /tmp/pv0001  If you are on a machine that has SELinux enabled do the following</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup April 2017</title>
      <link>https://suraj.io/post/blr-k8s-meetup-april-2017/</link>
      <pubDate>Sat, 08 Apr 2017 14:31:33 +0530</pubDate>
      
      <guid>https://suraj.io/post/blr-k8s-meetup-april-2017/</guid>
      <description>Like many Saturday mornings, Red Hat Bangalore office was once again abuzz with enthusiasm on 8th of April, for hosting yet another successful chapter of Bangalore Kubernetes Meetup. The Meetup had a good turnaround of about 40 people who gave up on their early morning saturday sleep to attend it despite the sweltering hot season and in line were four awesome talks.
Suraj Deshmukh set the stage with his opening talk, Kubernetes on CRI-O, wherein he explained different jargons like OCI, CRI, etc.</description>
    </item>
    
    <item>
      <title>k8s on CRI-O - single node</title>
      <link>https://suraj.io/post/using-crio-with-k8s-single-node/</link>
      <pubDate>Sat, 08 Apr 2017 00:11:37 +0530</pubDate>
      
      <guid>https://suraj.io/post/using-crio-with-k8s-single-node/</guid>
      <description>Here is a single node Kubernetes on CRI-O. This setup is done on Fedora 25.
Installing OS dependencies dnf -y install \ go \ git \ btrfs-progs-devel \ device-mapper-devel \ glib2-devel \ glibc-devel \ glibc-static \ gpgme-devel \ libassuan-devel \ libgpg-error-devel \ libseccomp-devel \ libselinux-devel \ pkgconfig \ wget \ etcd \ iptables  Creating go environment cd ~ mkdir -p ~/go export GOPATH=~/go export GOBIN=$GOPATH/bin export PATH=$PATH:$GOBIN echo &#39;GOPATH=~/go&#39; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>TODOs for new project</title>
      <link>https://suraj.io/post/starting-a-new-opensource-project-requirements/</link>
      <pubDate>Sun, 26 Mar 2017 18:19:15 +0530</pubDate>
      
      <guid>https://suraj.io/post/starting-a-new-opensource-project-requirements/</guid>
      <description>When starting a new open source project, apart from coding following are the things that need to be done.
Docs  README LICENSE How to install? How to use? Code of conduct guidelines Copyright Issue template like .github in repo.  Developer docs  How to install for developer? Developer docs Contribution guidelines Team meetings info Team communication channels Issue label guidelines Coding standards Code placement doc, or something that explains the way code is ordered Design document  Development  Makefile Unit tests Functional tests Coverage check CI for automatic tests Distro based package  This is just few things that I could think of, please suggest if you know more in comments.</description>
    </item>
    
    <item>
      <title>rpm Notes</title>
      <link>https://suraj.io/post/rpm-notes/</link>
      <pubDate>Fri, 24 Mar 2017 10:35:54 +0530</pubDate>
      
      <guid>https://suraj.io/post/rpm-notes/</guid>
      <description>Setup of the system for building rpms $ dnf -y install fedora-packager fedora-review $ sudo usermod -a -G mock vagrant $ fedora-packager-setup $ kinit surajd@FEDORAPROJECT.ORG  My Notes  Start reading from: Fedora packager&amp;rsquo;s guide Some macros come from redhat-rpm-config and fedora-rpm-macros.  $ sudo rpm -ql redhat-rpm-config-45-1.fc25.noarch   To see all macros on the system:  $ rpm --showrc   Koji - fedora build system fedora uses fedpkg for doing builds, while rpmbuild is for CentOS To get general info about the package  $ rpm -qip .</description>
    </item>
    
    <item>
      <title>Git Notes</title>
      <link>https://suraj.io/post/git-notes/</link>
      <pubDate>Tue, 21 Mar 2017 22:03:48 +0530</pubDate>
      
      <guid>https://suraj.io/post/git-notes/</guid>
      <description>Notes about using git.
Tips and tricks Switch branches $ git checkout &amp;lt;branch&amp;gt;  status $ git status -sb  Show status in short format and also give branch info
show $ git show  Shows log message and diff about the commit you are on.
log $ git log -L 70,100:pkg/transformer/kubernetes/kubernetes.go  Get logs on file between line numbers.
$ git log --graph --abbrev-commit  Show graph in logs.</description>
    </item>
    
    <item>
      <title>Intellij Shortcuts</title>
      <link>https://suraj.io/post/intellij-shortcuts/</link>
      <pubDate>Fri, 17 Mar 2017 14:41:51 +0530</pubDate>
      
      <guid>https://suraj.io/post/intellij-shortcuts/</guid>
      <description>Note: This is a living document and will be updated as I discover new things.
Shortcuts  Ctrl + Shift + A  Find any action in IDE
 Ctrl + Shift + F  Find in Path
 Alt + 1  Open project navigator. You can search here, just start typing here, after the project navigator window is opened.
 Shift + Insert in Project window  Here you can add new file to the project.</description>
    </item>
    
    <item>
      <title>Packaging &#39;kompose&#39; for centos paas sig</title>
      <link>https://suraj.io/post/packaging-kompose-for-centos-paas-sig/</link>
      <pubDate>Wed, 15 Mar 2017 14:16:43 +0530</pubDate>
      
      <guid>https://suraj.io/post/packaging-kompose-for-centos-paas-sig/</guid>
      <description>Note: This is a living document and will be updated from time to time.
Following are steps to package kompose for CentOS PAAS SIG. CentOS PAAS SIG is a repository of packages where rpms related to OpenShift and eco-system around it are delivered.
Setup your machine Install packages needed
sudo yum update -y &amp;amp;&amp;amp; \ sudo yum install -y epel-release &amp;amp;&amp;amp; \ sudo yum install -y rpm-build go redhat-rpm-config make koji \ gcc byobu rpmlint rpmdevtools centos-packager  Setup certs</description>
    </item>
    
    <item>
      <title>Testing &#39;fedora&#39; and &#39;CentOS&#39; kompose package</title>
      <link>https://suraj.io/post/test-kompose/</link>
      <pubDate>Tue, 14 Mar 2017 00:31:57 +0530</pubDate>
      
      <guid>https://suraj.io/post/test-kompose/</guid>
      <description>I generally do kompose package testing for fedora and CentOS. So here are the steps I follow.
Fedora For respective fedora version use the tag respectively for e.g. 25 for fedora 25.
Starting the environment:
docker run -it registry.fedoraproject.org/fedora:26 bash  Running tests:
# Inside the container # Pull packages from the testing repository dnf --enablerepo updates-testing -y install kompose # Check the kompose version kompose version # Install the testing dependencies dnf install -y jq make # Pull the git repository to run the functional tests git clone https://github.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://suraj.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://suraj.io/about/</guid>
      <description>  I am OpenSource Enthusiast. I contribute to various container &amp;amp; Kubernetes related technologies like Kedge, Kompose, cri-o, etc. I works for kinvolk &amp;amp; am ex-Red Hatter.  Contact  IRC, Slack: surajd Github: surajssd Twitter: @surajd_ Email: surajd.service@gmail.com &amp;amp; suraj@kinvolk.com Stackoverflow: surajd  </description>
    </item>
    
  </channel>
</rss>