<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>container on Suraj Deshmukh</title>
    <link>https://suraj.io/tags/container/</link>
    <description>Recent content in container on Suraj Deshmukh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Jan 2021 22:02:41 +0530</lastBuildDate><atom:link href="https://suraj.io/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Cluster using Kubeadm on Flatcar Container Linux</title>
      <link>https://suraj.io/post/2021/01/kubeadm-flatcar/</link>
      <pubDate>Fri, 29 Jan 2021 22:02:41 +0530</pubDate>
      
      <guid>https://suraj.io/post/2021/01/kubeadm-flatcar/</guid>
      <description>This blog shows a simple set of commands to install a Kubernetes cluster on Flatcar Container Linux based machines using Kubeadm.
Textual Steps All the commands are run by becoming root using sudo -i.
1. Setup Nodes All the following sub-steps should be run all the nodes.
1.1. Setup Networking systemctl enable docker modprobe br_netfilter cat &amp;lt;&amp;lt;EOF | tee /etc/modules-load.d/k8s.conf br_netfilter EOF cat &amp;lt;&amp;lt;EOF | tee /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.</description>
    </item>
    
    <item>
      <title>Exec in container environment</title>
      <link>https://suraj.io/post/2021/01/shell-exec/</link>
      <pubDate>Sat, 23 Jan 2021 10:10:41 +0530</pubDate>
      
      <guid>https://suraj.io/post/2021/01/shell-exec/</guid>
      <description>If you use exec in your container script, then the container or Kubernetes pod might exit after the command that is exec-ed into has exited. But if that&amp;rsquo;s what you wanted, then it&amp;rsquo;s okay. This blog tries to explain how to pass the signals to the applications, how they work differently when invoked uniquely and what to do if the application does handle them.
What are the &amp;ldquo;Signals&amp;rdquo;? Signals are messages one process can send to another process, mostly used in UNIX like operating systems.</description>
    </item>
    
    <item>
      <title>Watch Container Traffic Without Exec</title>
      <link>https://suraj.io/post/snoop-on-pod-traffic/</link>
      <pubDate>Sat, 06 Jun 2020 20:30:07 +0530</pubDate>
      
      <guid>https://suraj.io/post/snoop-on-pod-traffic/</guid>
      <description>Introduction For the reasons of security, many container deployments nowadays run their workloads in a scratch based image. This form of implementation helps reduce the attack surface since there is no shell to gain access to, especially if someone were to break out of the application.
But for the developers or operators of such applications, it is hard to debug. Since they lack essential tools or even bash for that matter, but the application&amp;rsquo;s debugging ability should not dictate its production deployment and compromise its security posture.</description>
    </item>
    
    <item>
      <title>Using private container registries from minikube</title>
      <link>https://suraj.io/post/private-registry-from-minikube/</link>
      <pubDate>Fri, 06 Oct 2017 19:32:33 +0530</pubDate>
      
      <guid>https://suraj.io/post/private-registry-from-minikube/</guid>
      <description>I am doing Kubernetes native development using minikube. And for doing that I had to download a Container image that is available in internally hosted private container registry.
On the configuration side of doing that you will need to create Kubernetes Secret of type docker-registry. And now refer that secret you just created in your Pod manifest under pod.spec.imagePullSecrets. For more info follow the tutorial in Kubernetes docs on Pull an Image from a Private Registry.</description>
    </item>
    
  </channel>
</rss>
