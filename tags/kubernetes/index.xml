<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Suraj Deshmukh</title>
    <link>http://suraj.io/tags/kubernetes/index.xml</link>
    <description>Recent content in Kubernetes on Suraj Deshmukh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://suraj.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Static Pods using Kubelet on Fedora</title>
      <link>http://suraj.io/post/static-pods/</link>
      <pubDate>Sat, 23 Sep 2017 13:10:14 +0530</pubDate>
      
      <guid>http://suraj.io/post/static-pods/</guid>
      <description>

&lt;p&gt;I wanted to try out &lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial&#34;&gt;&lt;em&gt;Standalone Kubelet Tutorial&lt;/em&gt;&lt;/a&gt;
of &lt;a href=&#34;https://twitter.com/kelseyhightower&#34;&gt;&lt;strong&gt;Kelsey Hightower&lt;/strong&gt;&lt;/a&gt; by myself but I could not
follow it as it is, because it was firstly on &lt;a href=&#34;https://cloud.google.com/compute/&#34;&gt;GCE&lt;/a&gt; and
secondly it uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Container_Linux_by_CoreOS&#34;&gt;CoreOS&lt;/a&gt;,
but since I am very familiar to &lt;a href=&#34;https://en.wikipedia.org/wiki/Fedora_(operating_system)&#34;&gt;Fedora&lt;/a&gt;
I thought of following that tutorial on it. To get a quick setup of a fresh Fedora machine
use &lt;a href=&#34;https://en.wikipedia.org/wiki/Vagrant_(software)&#34;&gt;Vagrant&lt;/a&gt;. I have used Vagrantfile
available &lt;a href=&#34;https://github.com/surajssd/scripts/blob/master/Vagrantfiles/fedora/Vagrantfile&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog is only replacement of section &lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial#install-the-standalone-kubelet&#34;&gt;&lt;strong&gt;Install the Standalone Kubelet&lt;/strong&gt;&lt;/a&gt;
in tutorial.&lt;/p&gt;

&lt;h2 id=&#34;installing-packages&#34;&gt;Installing packages&lt;/h2&gt;

&lt;p&gt;Since the tutorial uses CoreOS VM it already has a &lt;a href=&#34;https://kubernetes.io/docs/admin/kubelet/&#34;&gt;Kubelet&lt;/a&gt;
binary available, on Fedora you can get one using &lt;a href=&#34;https://en.wikipedia.org/wiki/DNF_(software)&#34;&gt;&lt;code&gt;dnf&lt;/code&gt;&lt;/a&gt;.
In tutorial Kelsey has put in his custom systemd service file, we will also make some
changes to the default kubelet&amp;rsquo;s service file packaged in Fedora.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf -y install kubernetes-node
sudo systemctl enable docker --now
sudo systemctl enable kubelet --now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since &lt;code&gt;docker&lt;/code&gt; is a dependency of &lt;code&gt;kubelet&lt;/code&gt; it is also installed, all we need to do is start
Docker manually alongwith Kubelet.&lt;/p&gt;

&lt;p&gt;Verify if &lt;code&gt;kubelet&lt;/code&gt; and &lt;code&gt;docker&lt;/code&gt; are running&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl status docker kubelet
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;editing-kubelet-systemd-service-file&#34;&gt;Editing kubelet systemd service file&lt;/h2&gt;

&lt;p&gt;Apply following changes to &lt;code&gt;/etc/kubernetes/config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/config b/config
index 8c0a284..cfccbee 100644
--- a/config
+++ b/config
@@ -16,7 +16,7 @@ KUBE_LOGTOSTDERR=&amp;quot;--logtostderr=true&amp;quot;
 KUBE_LOG_LEVEL=&amp;quot;--v=0&amp;quot;
 
 # Should this cluster be allowed to run privileged docker containers
-KUBE_ALLOW_PRIV=&amp;quot;--allow-privileged=false&amp;quot;
+KUBE_ALLOW_PRIV=&amp;quot;--allow-privileged=true&amp;quot;
 
 # How the controller-manager, scheduler, and proxy find the apiserver
 KUBE_MASTER=&amp;quot;--master=http://127.0.0.1:8080&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default in Fedora the Kubelet service won&amp;rsquo;t be running privileged pods. Setting flag
&lt;code&gt;--allow-privileged&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will allow you to do that. In Kelsey&amp;rsquo;s tutorial you can
find it &lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial/blob/98b0b5b000cc687cc9c85c54ded7b39f4322d4ba/kubelet.service#L8&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apply following changes to &lt;code&gt;/etc/kubernetes/kubelet&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/kubelet b/kubelet
index cfd5686..07c11ab 100644
--- a/kubelet
+++ b/kubelet
@@ -14,4 +14,4 @@ KUBELET_HOSTNAME=&amp;quot;--hostname-override=127.0.0.1&amp;quot;
 KUBELET_API_SERVER=&amp;quot;--api-servers=http://127.0.0.1:8080&amp;quot;
 
 # Add your own!
-KUBELET_ARGS=&amp;quot;--cgroup-driver=systemd&amp;quot;
+KUBELET_ARGS=&amp;quot;--cgroup-driver=systemd --pod-manifest-path=/etc/kubernetes/manifests&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To Kubelet we have added one more flag called &lt;code&gt;--pod-manifest-path&lt;/code&gt; which is explained in
docs as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Path to the directory containing pod manifest files to run, or the path to a single pod
manifest file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Above line can be found in tutorial in &lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial/blob/98b0b5b000cc687cc9c85c54ded7b39f4322d4ba/kubelet.service#L12&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;make-directory-for-pod-manifests&#34;&gt;Make directory for pod manifests&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /etc/kubernetes/manifests
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;restart-kubelet-service&#34;&gt;Restart &lt;code&gt;kubelet&lt;/code&gt; service&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl restart kubelet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can follow the rest of the tutorial as it is from section &lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial#static-pods&#34;&gt;&lt;strong&gt;Static Pods&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/static-pod/&#34;&gt;Static Pods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kelseyhightower/standalone-kubelet-tutorial&#34;&gt;Standalone Kubelet Tutorial - Kelsey Hightower&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>List of Kubernetes Bangalore meetup event report</title>
      <link>http://suraj.io/post/list-all-k8s-meetups/</link>
      <pubDate>Fri, 01 Sep 2017 15:51:16 +0530</pubDate>
      
      <guid>http://suraj.io/post/list-all-k8s-meetups/</guid>
      <description>&lt;p&gt;List of all the event reports from Kubernetes Bangalore meetup.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://suraj.io/post/blr-k8s-meetup-april-2017/&#34;&gt;April 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://suraj.io/post/blr-k8s-meetup-may-2017/&#34;&gt;May 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mohammedzee1000.wordpress.com/2017/06/11/kubernetes-magic-the-gathering-k8sblr-k8sblr-kubernetes-openshift-redhatopen/&#34;&gt;June 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://suraj.io/post/blr-k8s-meetup-july-2017/&#34;&gt;July 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudyuga.guru/blog/kubernetes-2nd-bday/&#34;&gt;Kubernetes 2nd Birthday Celebration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@aditya.konarde/bangalore-kubernetes-meetup-august-2017-686646e0763f&#34;&gt;August 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetes Learning resources</title>
      <link>http://suraj.io/post/k8s-learning-resources/</link>
      <pubDate>Thu, 17 Aug 2017 23:12:18 +0530</pubDate>
      
      <guid>http://suraj.io/post/k8s-learning-resources/</guid>
      <description>&lt;p&gt;Following is the list of all the places you can learn Kubernetes from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://in.udacity.com/course/scalable-microservices-with-kubernetes--ud615&#34;&gt;Scalable Microservices with Kubernetes&lt;/a&gt; -
Video tutorial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edx.org/course/fundamentals-containers-kubernetes-red-red-hat-do081x#!&#34;&gt;Fundamentals of Containers, Kubernetes, and Red Hat OpenShift&lt;/a&gt; -
Video tutorial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kubernetesbyexample.com/&#34;&gt;Kubernetes By Example&lt;/a&gt; - DIY tutorial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.katacoda.com/courses/kubernetes&#34;&gt;Learn Kubernetes using Interactive Browser-Based Scenarios&lt;/a&gt; -
DIY tutorial in your own web browser&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.openshift.com/&#34;&gt;Interactive Learning Portal for OpenShift&lt;/a&gt; -
DIY tutorial in your own web browser&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/home/&#34;&gt;Kubernetes docs&lt;/a&gt; - Textual DIY docs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/api-reference/v1.6/&#34;&gt;Kubernetes API reference v1.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.openshift.org/latest/welcome/index.html&#34;&gt;OpenShift docs&lt;/a&gt; - Textual DIY docs&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup July 2017</title>
      <link>http://suraj.io/post/blr-k8s-meetup-july-2017/</link>
      <pubDate>Thu, 13 Jul 2017 22:46:40 +0530</pubDate>
      
      <guid>http://suraj.io/post/blr-k8s-meetup-july-2017/</guid>
      <description>&lt;p&gt;This &lt;a href=&#34;https://www.meetup.com/kubernetes-openshift-India-Meetup/events/240859625/&#34;&gt;edition of meetup&lt;/a&gt;
was held at Nexus Ventures by folks at &lt;a href=&#34;https://twitter.com/openebs&#34;&gt;OpenEBS&lt;/a&gt;
on July 8th 2017, which started on a lovely Saturday morning.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/kiranmova&#34;&gt;Kiran Mova&lt;/a&gt; set the floor rolling with his talk
on &lt;em&gt;Hyperconverged version of OpenEBS with Kubernetes&lt;/em&gt;. Where he talked about
containerized storage vs traditional storage, instead of building clustering
into &lt;a href=&#34;https://github.com/openebs/openebs&#34;&gt;OpenEBS&lt;/a&gt; how they are leveraging
Kubernetes&amp;rsquo;s capabilities to do clustering.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-july-2017/kiran.JPG&#34; alt=&#34;openEBS demo&#34; title=&#34;openEBS demo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;He also explained difference between various storage providers viz. Portworx,
StorageOS, Rook, GlusterFS, OpenEBS, etc.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;595&#34; height=&#34;485&#34; src=&#34;https://www.youtube.com/embed/LRdcah-fs0g&#34;
frameborder=&#34;0&#34; style=&#34;border:1px solid #CCC; border-width:1px;
margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt;
&lt;a href=&#34;//youtu.be/LRdcah-fs0g&#34;
title=&#34;Hyperconverged version of OpenEBS with Kubernetes&#34;
target=&#34;_blank&#34;&gt;Hyperconverged version of OpenEBS with Kubernetes&lt;/a&gt;
&lt;/strong&gt; by &lt;strong&gt;&lt;a target=&#34;_blank&#34;
href=&#34;https://twitter.com/kiranmova&#34;&gt;Kiran Mova&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Then was talk by &lt;a href=&#34;https://twitter.com/kamesh_sampath&#34;&gt;Kamesh Sampath&lt;/a&gt; on
&lt;a href=&#34;https://github.com/istio/istio&#34;&gt;Istio&lt;/a&gt; named &lt;em&gt;A sail in the cloud&lt;/em&gt;.
Specifically tracing, monitoring, service discovery with Istio.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/fKzj4nGkTEsXnH&#34;
width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34;
scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px;
margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt;
&lt;a href=&#34;//www.slideshare.net/kameshsampath/a-sail-in-the-cloud&#34;
title=&#34;A sail in the cloud&#34; target=&#34;_blank&#34;&gt;A sail in the cloud&lt;/a&gt;
&lt;/strong&gt; from &lt;strong&gt;&lt;a target=&#34;_blank&#34;
href=&#34;https://www.slideshare.net/kameshsampath&#34;&gt;Kamesh Sampath&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;He explained the Istio Service Mesh architecture and all components it has.
How side-car pattern is being used to deploy Istio with the existing apps in
Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-july-2017/kamesh.JPG&#34; alt=&#34;side-car config&#34; title=&#34;side-car configuration&#34; /&gt;&lt;/p&gt;

&lt;p&gt;He talked and demoed about Canary deployment, tracing and Circuit breaking with
Istio. Watch the video recording of talk by Kamesh to learn in detail. Here is
his &lt;a href=&#34;https://github.com/workspace7/sail-into-cloud&#34;&gt;demo content&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;595&#34; height=&#34;485&#34; src=&#34;https://www.youtube.com/embed/LRdcah-fs0g?start=2020&#34;
frameborder=&#34;0&#34; style=&#34;border:1px solid #CCC; border-width:1px;
margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt;
&lt;a href=&#34;//youtu.be/LRdcah-fs0g?t=33m40s&#34;
title=&#34;A sail in the cloud&#34;
target=&#34;_blank&#34;&gt;A sail in the cloud&lt;/a&gt;
&lt;/strong&gt; by &lt;strong&gt;&lt;a target=&#34;_blank&#34;
href=&#34;https://twitter.com/kamesh_sampath&#34;&gt;Kamesh Sampath&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After a snacks break, there was a talk by &lt;a href=&#34;https://twitter.com/zee_10000&#34;&gt;Zeeshan Ahmed&lt;/a&gt;
about &lt;em&gt;Dance of container image building&lt;/em&gt;. The main highlight of this highly
interactive session was on best practices to be followed for building container
images.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-july-2017/zeeshan.JPG&#34; alt=&#34;buildah in action&#34; title=&#34;buildah in action&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Where he explained why it is not a good idea to bake configs and
secrets into container image and how one can use use Kubernetes secrets and
configMaps to get this configs and secrets in the container on the fly, he
then demoed the tool buildah where you don&amp;rsquo;t need a docker daemon to build
the container image.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;595&#34; height=&#34;485&#34; src=&#34;https://www.youtube.com/embed/LRdcah-fs0g?start=5961&#34;
frameborder=&#34;0&#34; style=&#34;border:1px solid #CCC; border-width:1px;
margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt;
&lt;a href=&#34;//youtu.be/LRdcah-fs0g?t=1h39m21s&#34;
title=&#34;Dance of container image building&#34;
target=&#34;_blank&#34;&gt;Dance of container image building&lt;/a&gt;
&lt;/strong&gt; by &lt;strong&gt;&lt;a target=&#34;_blank&#34;
href=&#34;https://twitter.com/zee_10000&#34;&gt;Zeeshan Ahmed&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Followed by Zeeshan was talk by &lt;a href=&#34;https://uyirpodiru.blogspot.in/&#34;&gt;Saravanakumar&lt;/a&gt;
where he talked about &lt;em&gt;Source to Image in OpenShift&lt;/em&gt;, where he explained what
is s2i, how you can use s2i with the running OpenShift cluster by directly
providing github url of a project and see it deployed on OpenShift.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-july-2017/saravanakumar.JPG&#34; alt=&#34;s2i demo&#34; title=&#34;s2i demo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then he demonstrated how you can build your own builder image for OpenShift s2i.
&lt;a href=&#34;http://goo.gl/xYJnuG&#34;&gt;Link to slides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;595&#34; height=&#34;485&#34; src=&#34;https://www.youtube.com/embed/LRdcah-fs0g?start=9048&#34;
frameborder=&#34;0&#34; style=&#34;border:1px solid #CCC; border-width:1px;
margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt;
&lt;a href=&#34;//youtu.be/LRdcah-fs0g?t=2h30m48s&#34;
title=&#34;Source to Image in OpenShift&#34;
target=&#34;_blank&#34;&gt;Source to Image in OpenShift&lt;/a&gt;
&lt;/strong&gt; by &lt;strong&gt;&lt;a target=&#34;_blank&#34;
href=&#34;https://uyirpodiru.blogspot.in/&#34;&gt;Saravanakumar&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The meetup ended with announcements of &lt;a href=&#34;https://www.meetup.com/Bangalore-Mesos-cncf-User-Group/events/240781879/&#34;&gt;Kubernetes Birthday meetup&lt;/a&gt;
and awesome burgers from Truffles sponsored by OpenEBS. Thanks all speakers,
attendees and sponsors for making this meetup a success. Thanks to OpenEBS
for being a generous sponsors, and specifically &lt;a href=&#34;https://twitter.com/kiranmova&#34;&gt;Kiran&lt;/a&gt;
and &lt;a href=&#34;https://twitter.com/_nisanta_&#34;&gt;Nisanta&lt;/a&gt; for organizing logistics and
helping on the day of meetup. Thanks to &lt;a href=&#34;https://www.linkedin.com/in/hemani-katyal-57900081&#34;&gt;Hemani&lt;/a&gt;
and &lt;a href=&#34;https://twitter.com/zee_10000&#34;&gt;Zeeshan&lt;/a&gt; for editing this post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup May 2017</title>
      <link>http://suraj.io/post/blr-k8s-meetup-may-2017/</link>
      <pubDate>Wed, 24 May 2017 02:21:49 +0530</pubDate>
      
      <guid>http://suraj.io/post/blr-k8s-meetup-may-2017/</guid>
      <description>

&lt;p&gt;&lt;em&gt;&amp;ldquo;One does not simply deploy containers to production&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/mordor_meme.jpg&#34; alt=&#34;One does not simply deploy containers to production&#34; title=&#34;One does not simply deploy containers to production&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With the rising craze around the container community in Bangalore and relative lack in awareness
around different container technologies like &lt;a href=&#34;http://kubernetesbyexample.com/&#34;&gt;Kubernetes&lt;/a&gt; and &lt;a href=&#34;https://developers.openshift.com/&#34;&gt;OpenShift&lt;/a&gt;,
an effort was made in imparting knowledge in this direction.&lt;/p&gt;

&lt;p&gt;So, this time around newbies were targeted for the Kubernetes Meetup.&lt;/p&gt;

&lt;p&gt;With the above objective, it was decided to have a &lt;a href=&#34;https://www.meetup.com/kubernetes-openshift-India-Meetup/events/239381714/&#34;&gt;Kubernetes 101 workshop&lt;/a&gt;
 at Red Hat Bangalore office on May 21, 2017 to familiarize people with concepts of Kubernetes and OpenShift and their
 usage and relevance as container orchestration tools for managing application deployments.&lt;/p&gt;

&lt;p&gt;The schedule for the Meetup was as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes 101 - Knowing the terms in Kubernetes&lt;/li&gt;
&lt;li&gt;Kubernetes 101 - Hands-on workshop&lt;/li&gt;
&lt;li&gt;OpenShift 101 - What OpenShift adds to Kubernetes?&lt;/li&gt;
&lt;li&gt;OpenShift 101 - Hands-on workshop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As per the schedule, we opened the floor with a talk by &lt;a href=&#34;https://www.linkedin.com/in/hemani-katyal-57900081&#34;&gt;Hemani Katyal&lt;/a&gt;
 on Kubernetes Basics(&lt;a href=&#34;https://docs.google.com/presentation/d/1pUg6eOfIfznSS-2m1-7EEXbyHyH9NPgCRZw6WcX6FG4/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;),
 wherein she explained the need for Kubernetes, what it is, it&amp;rsquo;s architecture, why Kubernetes would be better container
 orchestrator and the constructs of Kubernetes like pods, volumes, labels, replications controllers, services, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/hemani.jpg&#34; alt=&#34;Hemani Katyal&#34; title=&#34;Hemani Katyal explaining Kubernetes&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It was good to see people interested in concepts of service and the way it load balances traffic, how the labels
 construct is helpful in bringing in flexibility with deployments, why Kubernetes is better than other container
 orchestrators.&lt;/p&gt;

&lt;p&gt;Following up with the excitement, &lt;a href=&#34;https://twitter.com/surajd_&#34;&gt;Suraj Deshmukh&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/procrypt0&#34;&gt;Abhishek Singh&lt;/a&gt;,
 &lt;a href=&#34;https://twitter.com/zee_10000&#34;&gt;Zeeshan Ahmed&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/ContainsCafeine&#34;&gt;Shubham Minglani&lt;/a&gt; happily
 volunteered to conduct the hands-on workshop. The workshop exercises were taken from &lt;a href=&#34;https://www.katacoda.com/courses/kubernetes&#34;&gt;Kubernetes section&lt;/a&gt;
 of &lt;a href=&#34;https://www.katacoda.com/&#34;&gt;katacoda.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/mzee.jpg&#34; alt=&#34;Zeeshan Ahmed&#34; title=&#34;Zeeshan Ahmed explaining Kubernetes Secrets and ConfigMaps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It was pleasure to have an excited and responsive audience. Questions like kube-adm functionality on CentOS,
 installing Kubernetes in an isolated environment without internet, how ingress works and the likes of the same were
 asked during the hands-on session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/shubham.jpg&#34; alt=&#34;Shubham Minglani&#34; title=&#34;Shubham Minglani explaining Kubernetes HealthChecks&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Post a quick coffee break, &lt;a href=&#34;https://twitter.com/procrypt0&#34;&gt;Abhishek Singh&lt;/a&gt; briefed the audience about OpenShift basics(&lt;a href=&#34;https://docs.google.com/presentation/d/1e9dEuNfoFI0kMbtQmPUIgw85zS7s-cvupWB5ogYxdpc/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;),
 wherein he explained what OpenShift is and how it is an addon on top of Kubernetes. He touched upon topics like user
 management, various build features of OpenShift, container image handling in OpenShift, the way deployment fits in with
 build part, security, running OpenShift locally using &lt;a href=&#34;https://github.com/minishift/minishift/&#34;&gt;Minishift&lt;/a&gt;, to name a few.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/abhi.jpg&#34; alt=&#34;Abhishek Singh&#34; title=&#34;Abhishek Singh explaining OpenShift&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Satiating the hunger not just for knowledge but food as well, we broke for lunch.&lt;/p&gt;

&lt;p&gt;Post which we continued with OpenShift hand-on exercises, which were again from &lt;a href=&#34;https://learn.openshift.com/&#34;&gt;OpenShift section&lt;/a&gt;
 of &lt;a href=&#34;katacoda.com&#34;&gt;katacoda.com&lt;/a&gt;. &lt;a href=&#34;https://twitter.com/zee_10000&#34;&gt;Zeeshan Ahmed&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/red_suraj&#34;&gt;Suraj Narwade&lt;/a&gt;
 and &lt;a href=&#34;https://twitter.com/procrypt0&#34;&gt;Abhishek Singh&lt;/a&gt; helped with the workshop exercises. There seemed to be lot of
 interest around topics like the &lt;a href=&#34;https://docs.openshift.com/enterprise/3.0/architecture/core_concepts/builds_and_image_streams.html#source-build&#34;&gt;source to image&lt;/a&gt;
 feature of OpenShift, if &lt;a href=&#34;https://docs.openshift.com/enterprise/3.2/dev_guide/routes.html&#34;&gt;OpenShift’s router&lt;/a&gt; allowed
 UDP traffic, the difference between ingress and routes.&lt;/p&gt;

&lt;p&gt;Red Hat’s latest announcement regarding the &lt;a href=&#34;https://blog.openshift.com/aws-and-red-hat-digging-a-little-deeper/&#34;&gt;integration of AWS services with OpenShift&lt;/a&gt;
 also generated some curiosity among the audience.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-may-2017/people.jpg&#34; alt=&#34;Folks listening&#34; title=&#34;Folks listening&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The meetup concluded asking for &lt;a href=&#34;https://goo.gl/forms/ILSI0Xb3OKuKMKht2&#34;&gt;feedback&lt;/a&gt; and distributing some swag. In
 feedback we received, people wanted to see some real world examples, the kind of applications that run on these
 platforms, and much more which are advanced topics and we would love to take up in normal meetup as opposed to a 101.&lt;/p&gt;

&lt;p&gt;I would like to conclude here by thanking all speakers, volunteers for spreading knowledge, &lt;a href=&#34;katacoda.com&#34;&gt;katacoda.com&lt;/a&gt;
 for awesome workshop material and audience for listening patiently and trying out things and making this meetup
 successful. And last but not the least, I would like to express my deepest gratitude to Red Hat for sponsoring the event
 and providing us with the venue and &lt;a href=&#34;https://www.linkedin.com/in/hemani-katyal-57900081&#34;&gt;Hemani Katyal&lt;/a&gt;
 for making this post an awesome read.&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes DIY hands-on exercises &lt;a href=&#34;https://www.katacoda.com/courses/kubernetes&#34;&gt;https://www.katacoda.com/courses/kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenShift DIY hands-on exercises &lt;a href=&#34;https://learn.openshift.com/&#34;&gt;https://learn.openshift.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Enabling local development with Kubernetes</title>
      <link>http://suraj.io/post/enabling-local-development-with-k8s/</link>
      <pubDate>Sun, 23 Apr 2017 15:57:07 +0530</pubDate>
      
      <guid>http://suraj.io/post/enabling-local-development-with-k8s/</guid>
      <description>

&lt;p&gt;I want to show how you can enable &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; in your day to day development workflow. So that
you get the feel of production deployment locally from day 1.&lt;/p&gt;

&lt;p&gt;I have a &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;flask application&lt;/a&gt; which I am working on. The basic directory structure looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ll
total 24
-rw-rw-r--. 1 foo foo  427 Apr 23 16:23 app.py
-rw-rw-r--. 1 foo foo  201 Apr 23 16:55 docker-compose.yml
-rw-rw-r--. 1 foo foo  363 Apr 23 16:21 Dockerfile
-rwxrwxr-x. 1 foo foo   82 Dec  5 19:41 entrypoint.sh
-rw-rw-r--. 1 foo foo 3010 Dec  5 19:41 README.adoc
-rw-rw-r--. 1 foo foo   11 Dec  5 19:41 requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can find all of these files in this &lt;a href=&#34;https://github.com/surajssd/hitcounter&#34;&gt;github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For having a local cluster I am using &lt;a href=&#34;https://github.com/kubernetes/minikube&#34;&gt;minikube&lt;/a&gt;. So follow instructions to
&lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/minikube/&#34;&gt;setup minikube&lt;/a&gt;. Once you follow the instructions
you will have a vm running a single node kubernetes cluster and a locally available &lt;code&gt;kubectl&lt;/code&gt; binary.&lt;/p&gt;

&lt;p&gt;Before running this application on the minikube cluster we need configurations that kubernetes understands. Since we
already have docker-compose file we will generate configs from this file with the help from tool called &lt;a href=&#34;http://kompose.io/&#34;&gt;kompose&lt;/a&gt;.
Install kompose as per instructions as given on &lt;a href=&#34;https://github.com/kubernetes-incubator/kompose#installation&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Generating configs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir configs
$ kompose convert -o configs/
WARN Kubernetes provider doesnt support build key - ignoring
INFO file &amp;quot;configs/hitcounter-service.yaml&amp;quot; created
INFO file &amp;quot;configs/redis-service.yaml&amp;quot; created
INFO file &amp;quot;configs/hitcounter-deployment.yaml&amp;quot; created
INFO file &amp;quot;configs/redis-deployment.yaml&amp;quot; created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before we deploy the app we need to make some changes in the deployment files, that were converted from docker-compose service
having &lt;code&gt;build&lt;/code&gt; construct in them. In our case only python app &lt;code&gt;hitcounter&lt;/code&gt; is built is being built from &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will edit file &lt;code&gt;hitcounter-deployment.yaml&lt;/code&gt; in &lt;code&gt;configs&lt;/code&gt; directory, to not pull image but read image from the local docker
storage. Add a field after &lt;code&gt;image&lt;/code&gt; called &lt;code&gt;imagePullPolicy: IfNotPresent&lt;/code&gt;. Make changes as shown in following diff:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;$ git diff
diff --git a/configs/hitcounter-deployment.yaml b/configs/hitcounter-deployment.yaml
index 7b1116d..0ef35b3 100644
--- a/configs/hitcounter-deployment.yaml
+++ b/configs/hitcounter-deployment.yaml
@@ -17,6 +17,7 @@ spec:
         - name: REDIS_HOST
           value: redis
         image: hitcounter
+        imagePullPolicy: IfNotPresent
         name: hitcounter
         ports:
         - containerPort: 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we are ready with the configs, but we need to build container image for our app. So here you will need to have
&lt;code&gt;docker-compose&lt;/code&gt; installed on your machine. For that follow &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;docs here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Build image in the minikube&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;eval $(minikube docker-env)
docker-compose build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the build is complete, we are good to the deployment in kubernetes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kubectl create -f configs/
deployment &amp;quot;hitcounter&amp;quot; created
service &amp;quot;hitcounter&amp;quot; created
deployment &amp;quot;redis&amp;quot; created
service &amp;quot;redis&amp;quot; created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To verify that the app is running, find out the exposed IP Address as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kubectl get svc
NAME         CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE
hitcounter   10.0.0.244   &amp;lt;pending&amp;gt;     5000:30476/TCP   6s
kubernetes   10.0.0.1     &amp;lt;none&amp;gt;        443/TCP          3d
redis        10.0.0.21    &amp;lt;none&amp;gt;        6379/TCP         6s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now hit the externally exposed port &lt;code&gt;30476&lt;/code&gt; of service &lt;code&gt;hitcounter&lt;/code&gt; as:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl $(minikube ip):30476
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now everytime you make changes to code do the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose build
kubectl scale deployment hitcounter --replicas=0
kubectl scale deployment hitcounter --replicas=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above we are removing all containers with old image and asking it to use the new image. For OpenShift we can do
&lt;code&gt;oc deploy hitcounter --latest&lt;/code&gt; and it will trigger the deployment but I could not find anything similar with
kubernetes.&lt;/p&gt;

&lt;h3 id=&#34;faq&#34;&gt;FAQ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;- Why do I need to make changes in the kompose generated configs?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because by the default the config that kompose generates will not set &lt;code&gt;imagePullPolicy&lt;/code&gt; and hence Kubernetes
assumes its value to be &lt;code&gt;Always&lt;/code&gt;. So if you don&amp;rsquo;t make changes and try to deploy then Kubernetes will try
to find the image from docker hub. Which it won&amp;rsquo;t find and then that deployment will fail.
So we need to tell Kubernetes to look for the image in local docker storage.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;- Can I use the same configs in the production servers as well?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes you can use it just remove the change we did in the &lt;code&gt;imagePullPolicy: IfNotPresent&lt;/code&gt;. The change is done
to enable you to use the locally built images without having to push the image to any container registry.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;- How do I get images when I am deploying in production level cluster?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make sure your cluster can pull images from some private container registry. And then set up a build pipeline
from your code repo to build container on every change of it&amp;rsquo;s stable branch.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;- I have &lt;code&gt;build&lt;/code&gt; defined in my &lt;code&gt;docker-compose&lt;/code&gt; service why do I need to mention image name?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With docker-compose this is okay. But kompose cannot make up a name on it&amp;rsquo;s own and create deployment. The
&lt;a href=&#34;https://github.com/kubernetes-incubator/kompose/issues/571&#34;&gt;issue&lt;/a&gt; is tracked in kompose. But for now
with &lt;code&gt;build&lt;/code&gt; also provide the &lt;code&gt;image&lt;/code&gt; name you would expect.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;- I get error running docker commands with minikube?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you face problem accessing the docker daemon running inside the minikube VM like one of this&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ eval $(minikube docker-env)
$ docker ps
could not read CA certificate &amp;quot;/etc/docker/ca.pem&amp;quot;: open /etc/docker/ca.pem: no such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This could be because there is a mismatch in docker client and docker daemon version, so to solve this issue just copy
the docker client from the minikube VM to the local machine.&lt;/p&gt;

&lt;p&gt;Enter in the VM&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;minikube ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy the binary to host machine&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scp $(which docker) foo@192.168.122.1:/home/foo/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now put the binary in &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any other questions please ask it, I would like to add those here in FAQ section.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quick PV for local Kubernetes cluster</title>
      <link>http://suraj.io/post/quick-pv-for-local-k8s/</link>
      <pubDate>Tue, 18 Apr 2017 23:56:15 +0530</pubDate>
      
      <guid>http://suraj.io/post/quick-pv-for-local-k8s/</guid>
      <description>

&lt;p&gt;I do lot of &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; related work either on &lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/minikube/&#34;&gt;minikube&lt;/a&gt; or local &lt;a href=&#34;https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md#overview&#34;&gt;OpenShift cluster&lt;/a&gt; setup in a VM. Often I need to create a &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; a.k.a. &lt;code&gt;pvc&lt;/code&gt;. But to use &lt;code&gt;pvc&lt;/code&gt; you have to have a &lt;code&gt;PersistentVolume&lt;/code&gt; or &lt;code&gt;pv&lt;/code&gt; defined.&lt;/p&gt;

&lt;h3 id=&#34;enter-into-the-machine-running-k8s&#34;&gt;Enter into the machine running k8s&lt;/h3&gt;

&lt;p&gt;If using minikube you can do&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;minikube ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-a-local-directory-for-storage&#34;&gt;Create a local directory for storage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /tmp/pv0001
chmod 777 /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are on a machine that has &lt;code&gt;SELinux&lt;/code&gt; enabled do the following&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo chcon -R -t svirt_sandbox_file_t /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-pv&#34;&gt;Creating &lt;code&gt;pv&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Create file with following content&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat pv.yaml
apiVersion: &amp;quot;v1&amp;quot;
kind: &amp;quot;PersistentVolume&amp;quot;
metadata:
  name: &amp;quot;pv0001&amp;quot;
spec:
  capacity:
    storage: &amp;quot;5Gi&amp;quot;
  accessModes:
    - &amp;quot;ReadWriteOnce&amp;quot;
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get to the terminal from where you can run &lt;code&gt;kubectl&lt;/code&gt; commands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl create -f pv.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are doing it for OpenShift cluster then run following command with privileged access.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oc create -f pv.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you have a &lt;code&gt;pv&lt;/code&gt; now you can create &lt;code&gt;pvc&lt;/code&gt;&amp;rsquo;s to use it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bangalore Kubernetes Meetup April 2017</title>
      <link>http://suraj.io/post/blr-k8s-meetup-april-2017/</link>
      <pubDate>Sat, 08 Apr 2017 14:31:33 +0530</pubDate>
      
      <guid>http://suraj.io/post/blr-k8s-meetup-april-2017/</guid>
      <description>&lt;p&gt;Like many Saturday mornings, &lt;a href=&#34;https://www.google.co.in/search?q=red+hat+bangalore&amp;amp;oq=red+ha&amp;amp;aqs=chrome.0.69i59j69i61l3j69i57j69i59.5776j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8#q=red+hat+bangalore&amp;amp;rflfq=1&amp;amp;rlha=0&amp;amp;rllag=12949018,77600064,1885&amp;amp;tbm=lcl&amp;amp;tbs=lf_pqs:EAE,lf:1,lf_ui:3&amp;amp;rldoc=1&amp;amp;rlfi=hd:;si:1155840882052252649;mv:!1m3!1d18064.656204115003!2d77.600064!3d12.949018050000001!2m3!1f0!2f0!3f0!3m2!1i91!2i446!4f13.1;tbs:lf_pqs:EAE,lf:1,lf_ui:3&#34;&gt;Red Hat Bangalore&lt;/a&gt;
office was once again abuzz with enthusiasm on 8th of April, for hosting yet
another successful chapter of &lt;a href=&#34;https://www.meetup.com/kubernetes-openshift-India-Meetup/events/238335903/&#34;&gt;Bangalore Kubernetes Meetup&lt;/a&gt;.
The Meetup had a good turnaround of about 40 people who gave up on their
early morning saturday sleep to attend it despite the sweltering hot
season and in line were four awesome talks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/surajd_&#34;&gt;Suraj Deshmukh&lt;/a&gt; set the stage with his opening
talk, &lt;em&gt;Kubernetes on CRI-O&lt;/em&gt;, wherein he explained different jargons like
OCI, CRI, etc., introduced CRI-O and it’s architecture. Explaining how it
glues Kubernetes and OCI compliant runtimes and concluding it with a demo
showing how Kubernetes uses CRI-O. Link to &lt;a href=&#34;https://docs.google.com/presentation/d/1tP7b1e1fy-n3_v5bilDLjOAheZGu602B3WK-1kxXkVo/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/_E7foB4kVGM&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-april-2017/group.jpg&#34; alt=&#34;Folks listening&#34; title=&#34;Folks listening&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next in queue, was another wonderful talk by &lt;a href=&#34;https://twitter.com/dipakpawar231&#34;&gt;Dipak Pawar&lt;/a&gt;
about &lt;em&gt;System and integration testing for Kubernetes/OpenShift with
arquillian-cube and JBoss Forge&lt;/em&gt;, elaborating the usefulness of
arquillian-cube’s integration for Kubernetes and OpenShift coupled
with Forge tooling for testing micro-services deployed on OpenShift/Kubernetes.
Link to &lt;a href=&#34;https://youtu.be/f4qIKmlBg34&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-april-2017/dipak.jpg&#34; alt=&#34;Dipak Pawar&#34; title=&#34;Dipak Pawar demoing arquillian-cube&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Following a quick breather, was an informative talk by &lt;a href=&#34;https://twitter.com/budhrg&#34;&gt;Budhram Gurung&lt;/a&gt;
on &lt;em&gt;Running OpenShift locally using Minishift&lt;/em&gt;, highlighting the inspiration
for the project and covering components of Minishift with a demo showing
it&amp;rsquo;s usage. Also, leaving behind a note on how one could reach out to the
developers and contribute to Minishift. Link to &lt;a href=&#34;https://docs.google.com/presentation/d/1oONy-2ncemEE7dtddoZL0Lcu0KVIUtqADhEX0bB5q5g/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/dvYeRbSpxR8&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-april-2017/budhram.jpg&#34; alt=&#34;Budhram Gurung&#34; title=&#34;Budhram demoing Minishift&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Last, but not the least, planned talk was by &lt;a href=&#34;https://twitter.com/red_suraj&#34;&gt;Suraj Narwade&lt;/a&gt;
on running &lt;em&gt;Docker on ARM/Raspberry PI&lt;/em&gt;, wherein he enjoyed sharing his
experience of working on his hobby project, and all the problems faced by
him in trying to get containers running on Raspberry PI. He shared his
discovery showcasing the incompatibility of the container images built on
&lt;code&gt;x86_64&lt;/code&gt;, to run on &lt;code&gt;arm&lt;/code&gt;. Link to &lt;a href=&#34;https://docs.google.com/presentation/d/1cJeQyMG_NOn8QDJpIHkAjTT4I0L6AyQ8DxeGbVWn850/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/8yzPt5MfY8s&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-april-2017/surajn.jpg&#34; alt=&#34;Suraj Narwade&#34; title=&#34;Suraj Narwade demoing about the Docker&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, an unanticipated lightening talk took the audience by storm where
a quick 3 minutes demo on &lt;em&gt;Persistent Storage with Kubernetes&lt;/em&gt; by &lt;a href=&#34;https://twitter.com/raghavendra_t&#34;&gt;Raghavendra Talur&lt;/a&gt;
turned into a good discussion of 30 minutes. He demo-ed, hyper-converged
storage and dynamic provisioning with gluster and answered a lot of queries
regarding setting up storage with Kubernetes, finishing on a
to be continued note in the successive meetup.&lt;/p&gt;

&lt;p&gt;The meetup concluded with discussion over snacks and planning for the next
chapter of this meetup, which will be a &lt;strong&gt;Kubernetes and OpenShift 101 workshop&lt;/strong&gt;
for beginners.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://suraj.io/images/blr-k8s-meetup-april-2017/network.jpg&#34; alt=&#34;Folks networking&#34; title=&#34;Folks networking&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks to all the Speakers for sharing their valuable thoughts and learnings,
&lt;a href=&#34;https://twitter.com/nogenerics&#34;&gt;Baiju&lt;/a&gt; for recording all the sessions,
&lt;a href=&#34;https://www.linkedin.com/in/hemani-katyal-57900081&#34;&gt;Hemani&lt;/a&gt; for making this post a good read
and &lt;a href=&#34;https://twitter.com/redhatopen&#34;&gt;Red Hat&lt;/a&gt; for the venue.&lt;/p&gt;

&lt;p&gt;The meetup is also featured on &lt;a href=&#34;http://www.k8sport.org/&#34;&gt;K8sPort&lt;/a&gt;, which
is community engagement platform for Kubernetes community, courtesy &lt;a href=&#34;https://twitter.com/RSQuackenbush&#34;&gt;Ryan Quackenbush&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>k8s on CRI-O - single node</title>
      <link>http://suraj.io/post/using-crio-with-k8s-single-node/</link>
      <pubDate>Sat, 08 Apr 2017 00:11:37 +0530</pubDate>
      
      <guid>http://suraj.io/post/using-crio-with-k8s-single-node/</guid>
      <description>

&lt;p&gt;Here is a single node Kubernetes on CRI-O. This setup is done on Fedora 25.&lt;/p&gt;

&lt;h3 id=&#34;installing-os-dependencies&#34;&gt;Installing OS dependencies&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dnf -y install \
  go \
  git \
  btrfs-progs-devel \
  device-mapper-devel \
  glib2-devel \
  glibc-devel \
  glibc-static \
  gpgme-devel \
  libassuan-devel \
  libgpg-error-devel \
  libseccomp-devel \
  libselinux-devel \
  pkgconfig \
  wget \
  etcd \
  iptables
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-go-environment&#34;&gt;Creating go environment&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~
mkdir -p ~/go

export GOPATH=~/go
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOBIN

echo &#39;GOPATH=~/go&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;GOBIN=$GOPATH/bin&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;PATH=$PATH:$GOBIN&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pull-all-the-code-dependencies&#34;&gt;Pull all the code dependencies&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d k8s.io/kubernetes
go get -u github.com/cloudflare/cfssl/cmd/...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-runc&#34;&gt;Install runc&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d github.com/opencontainers/runc
cd $GOPATH/src/github.com/opencontainers/runc
git reset --hard v1.0.0-rc3
make BUILDTAGS=&#39;seccomp selinux&#39; &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-cri-o&#34;&gt;Build &lt;code&gt;cri-o&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd
go get -d github.com/kubernetes-incubator/cri-o
cd $GOPATH/src/github.com/kubernetes-incubator/cri-o
make install.tools
make &amp;amp;&amp;amp; make install
make install.config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;set-up-cni&#34;&gt;Set up CNI&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d github.com/containernetworking/cni
cd $GOPATH/src/github.com/containernetworking/cni
./build.sh

mkdir -p /opt/cni/bin
cp bin/* /opt/cni/bin/

mkdir -p /etc/cni/net.d/
cat &amp;gt; /etc/cni/net.d/10-ocid-bridge.conf &amp;lt;&amp;lt;EOF
{
    &amp;quot;cniVersion&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;ocid-bridge&amp;quot;,
    &amp;quot;type&amp;quot;: &amp;quot;bridge&amp;quot;,
    &amp;quot;bridge&amp;quot;: &amp;quot;cni0&amp;quot;,
    &amp;quot;isGateway&amp;quot;: true,
    &amp;quot;ipMasq&amp;quot;: true,
    &amp;quot;ipam&amp;quot;: {
        &amp;quot;type&amp;quot;: &amp;quot;host-local&amp;quot;,
        &amp;quot;subnet&amp;quot;: &amp;quot;10.88.0.0/16&amp;quot;,
        &amp;quot;routes&amp;quot;: [
            { &amp;quot;dst&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; }
        ]
    }
}
EOF

cat &amp;gt; /etc/cni/net.d/99-loopback.conf &amp;lt;&amp;lt;EOF
{
    &amp;quot;cniVersion&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;type&amp;quot;: &amp;quot;loopback&amp;quot;
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-policy-json&#34;&gt;Create &lt;code&gt;policy.json&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p  /etc/containers

cat &amp;gt; /etc/containers/policy.json &amp;lt;&amp;lt;EOF
{
    &amp;quot;default&amp;quot;: [
        {
            &amp;quot;type&amp;quot;: &amp;quot;insecureAcceptAnything&amp;quot;
        }
    ]
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;make-selinux-happy&#34;&gt;Make SELinux happy&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /var/lib/containers/
chcon -Rt svirt_sandbox_file_t /var/lib/containers/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-ocid-service&#34;&gt;Start ocid service&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$PATH:/usr/local/bin/
echo &#39;PATH=$PATH:/usr/local/bin/&#39; &amp;gt;&amp;gt; ~/.bashrc
ocid --runtime /usr/local/sbin/runc --log /root/ocid.log --debug --selinux true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-k8s-cluster-with-crio&#34;&gt;Start k8s cluster with crio&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $GOPATH/src/k8s.io/kubernetes/
CONTAINER_RUNTIME=remote CONTAINER_RUNTIME_ENDPOINT=&#39;/var/run/ocid.sock --runtime-request-timeout=15m&#39; ./hack/local-up-cluster.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use &lt;code&gt;kubectl&lt;/code&gt; (in new terminal)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias kubectl=$GOPATH/src/k8s.io/kubernetes/cluster/kubectl.sh
echo &#39;alias kubectl=$GOPATH/src/k8s.io/kubernetes/cluster/kubectl.sh&#39;  &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ref:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bangalore Kubernetes Meetup - April 2017 - &lt;a href=&#34;https://docs.google.com/presentation/d/1tP7b1e1fy-n3_v5bilDLjOAheZGu602B3WK-1kxXkVo/edit?usp=sharing&#34;&gt;Slides&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/runc0m&#34;&gt;runcom&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://gist.github.com/runcom/ba58bf2f64e38d9f5d376d587751a0f9#file-fedora_25&#34;&gt;Setup script&lt;/a&gt; for Fedora.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o&#34;&gt;cri-o project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cri-o &lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o/blob/master/tutorial.md&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o/blob/master/kubernetes.md&#34;&gt;Running cri-o on kubernetes cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CRI-O: A kubernetes runtime - &lt;a href=&#34;https://www.youtube.com/watch?v=R-p7BXhtodo&#34;&gt;video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>