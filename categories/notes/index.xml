<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Suraj Deshmukh</title>
    <link>http://suraj.io/categories/notes/index.xml</link>
    <description>Recent content in Notes on Suraj Deshmukh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://suraj.io/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Quick PV for local Kubernetes cluster</title>
      <link>http://suraj.io/post/quick-pv-for-local-k8s/</link>
      <pubDate>Tue, 18 Apr 2017 23:56:15 +0530</pubDate>
      
      <guid>http://suraj.io/post/quick-pv-for-local-k8s/</guid>
      <description>

&lt;p&gt;I do lot of &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; related work either on &lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/minikube/&#34;&gt;minikube&lt;/a&gt; or local &lt;a href=&#34;https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md#overview&#34;&gt;OpenShift cluster&lt;/a&gt; setup in a VM. Often I need to create a &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; a.k.a. &lt;code&gt;pvc&lt;/code&gt;. But to use &lt;code&gt;pvc&lt;/code&gt; you have to have a &lt;code&gt;PersistentVolume&lt;/code&gt; or &lt;code&gt;pv&lt;/code&gt; defined.&lt;/p&gt;

&lt;h3 id=&#34;enter-into-the-machine-running-k8s&#34;&gt;Enter into the machine running k8s&lt;/h3&gt;

&lt;p&gt;If using minikube you can do&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;minikube ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-a-local-directory-for-storage&#34;&gt;Create a local directory for storage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /tmp/pv0001
chmod 777 /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are on a machine that has &lt;code&gt;SELinux&lt;/code&gt; enabled do the following&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo chcon -R -t svirt_sandbox_file_t /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-pv&#34;&gt;Creating &lt;code&gt;pv&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Create file with following content&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat pv.yaml
apiVersion: &amp;quot;v1&amp;quot;
kind: &amp;quot;PersistentVolume&amp;quot;
metadata:
  name: &amp;quot;pv0001&amp;quot;
spec:
  capacity:
    storage: &amp;quot;5Gi&amp;quot;
  accessModes:
    - &amp;quot;ReadWriteOnce&amp;quot;
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /tmp/pv0001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get to the terminal from where you can run &lt;code&gt;kubectl&lt;/code&gt; commands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl create -f pv.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are doing it for OpenShift cluster then run following command with privileged access.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oc create -f pv.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you have a &lt;code&gt;pv&lt;/code&gt; now you can create &lt;code&gt;pvc&lt;/code&gt;&amp;rsquo;s to use it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>k8s on CRI-O - single node</title>
      <link>http://suraj.io/post/using-crio-with-k8s-single-node/</link>
      <pubDate>Sat, 08 Apr 2017 00:11:37 +0530</pubDate>
      
      <guid>http://suraj.io/post/using-crio-with-k8s-single-node/</guid>
      <description>

&lt;p&gt;Here is a single node Kubernetes on CRI-O. This setup is done on Fedora 25.&lt;/p&gt;

&lt;h3 id=&#34;installing-os-dependencies&#34;&gt;Installing OS dependencies&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dnf -y install \
  go \
  git \
  btrfs-progs-devel \
  device-mapper-devel \
  glib2-devel \
  glibc-devel \
  glibc-static \
  gpgme-devel \
  libassuan-devel \
  libgpg-error-devel \
  libseccomp-devel \
  libselinux-devel \
  pkgconfig \
  wget \
  etcd \
  iptables
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-go-environment&#34;&gt;Creating go environment&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~
mkdir -p ~/go

export GOPATH=~/go
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOBIN

echo &#39;GOPATH=~/go&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;GOBIN=$GOPATH/bin&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;PATH=$PATH:$GOBIN&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pull-all-the-code-dependencies&#34;&gt;Pull all the code dependencies&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d k8s.io/kubernetes
go get -u github.com/cloudflare/cfssl/cmd/...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-runc&#34;&gt;Install runc&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d github.com/opencontainers/runc
cd $GOPATH/src/github.com/opencontainers/runc
git reset --hard v1.0.0-rc3
make BUILDTAGS=&#39;seccomp selinux&#39; &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-cri-o&#34;&gt;Build &lt;code&gt;cri-o&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd
go get -d github.com/kubernetes-incubator/cri-o
cd $GOPATH/src/github.com/kubernetes-incubator/cri-o
make install.tools
make &amp;amp;&amp;amp; make install
make install.config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;set-up-cni&#34;&gt;Set up CNI&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -d github.com/containernetworking/cni
cd $GOPATH/src/github.com/containernetworking/cni
./build.sh

mkdir -p /opt/cni/bin
cp bin/* /opt/cni/bin/

mkdir -p /etc/cni/net.d/
cat &amp;gt; /etc/cni/net.d/10-ocid-bridge.conf &amp;lt;&amp;lt;EOF
{
    &amp;quot;cniVersion&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;ocid-bridge&amp;quot;,
    &amp;quot;type&amp;quot;: &amp;quot;bridge&amp;quot;,
    &amp;quot;bridge&amp;quot;: &amp;quot;cni0&amp;quot;,
    &amp;quot;isGateway&amp;quot;: true,
    &amp;quot;ipMasq&amp;quot;: true,
    &amp;quot;ipam&amp;quot;: {
        &amp;quot;type&amp;quot;: &amp;quot;host-local&amp;quot;,
        &amp;quot;subnet&amp;quot;: &amp;quot;10.88.0.0/16&amp;quot;,
        &amp;quot;routes&amp;quot;: [
            { &amp;quot;dst&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; }
        ]
    }
}
EOF

cat &amp;gt; /etc/cni/net.d/99-loopback.conf &amp;lt;&amp;lt;EOF
{
    &amp;quot;cniVersion&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;type&amp;quot;: &amp;quot;loopback&amp;quot;
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-policy-json&#34;&gt;Create &lt;code&gt;policy.json&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p  /etc/containers

cat &amp;gt; /etc/containers/policy.json &amp;lt;&amp;lt;EOF
{
    &amp;quot;default&amp;quot;: [
        {
            &amp;quot;type&amp;quot;: &amp;quot;insecureAcceptAnything&amp;quot;
        }
    ]
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;make-selinux-happy&#34;&gt;Make SELinux happy&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /var/lib/containers/
chcon -Rt svirt_sandbox_file_t /var/lib/containers/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-ocid-service&#34;&gt;Start ocid service&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$PATH:/usr/local/bin/
echo &#39;PATH=$PATH:/usr/local/bin/&#39; &amp;gt;&amp;gt; ~/.bashrc
ocid --runtime /usr/local/sbin/runc --log /root/ocid.log --debug --selinux true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-k8s-cluster-with-crio&#34;&gt;Start k8s cluster with crio&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $GOPATH/src/k8s.io/kubernetes/
CONTAINER_RUNTIME=remote CONTAINER_RUNTIME_ENDPOINT=&#39;/var/run/ocid.sock --runtime-request-timeout=15m&#39; ./hack/local-up-cluster.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use &lt;code&gt;kubectl&lt;/code&gt; (in new terminal)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias kubectl=$GOPATH/src/k8s.io/kubernetes/cluster/kubectl.sh
echo &#39;alias kubectl=$GOPATH/src/k8s.io/kubernetes/cluster/kubectl.sh&#39;  &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ref:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bangalore Kubernetes Meetup - April 2017 - &lt;a href=&#34;https://docs.google.com/presentation/d/1tP7b1e1fy-n3_v5bilDLjOAheZGu602B3WK-1kxXkVo/edit?usp=sharing&#34;&gt;Slides&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/runc0m&#34;&gt;runcom&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://gist.github.com/runcom/ba58bf2f64e38d9f5d376d587751a0f9#file-fedora_25&#34;&gt;Setup script&lt;/a&gt; for Fedora.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o&#34;&gt;cri-o project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cri-o &lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o/blob/master/tutorial.md&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o/blob/master/kubernetes.md&#34;&gt;Running cri-o on kubernetes cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CRI-O: A kubernetes runtime - &lt;a href=&#34;https://www.youtube.com/watch?v=R-p7BXhtodo&#34;&gt;video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>rpm Notes</title>
      <link>http://suraj.io/post/rpm-notes/</link>
      <pubDate>Fri, 24 Mar 2017 10:35:54 +0530</pubDate>
      
      <guid>http://suraj.io/post/rpm-notes/</guid>
      <description>

&lt;h2 id=&#34;setup-of-the-system-for-building-rpms&#34;&gt;Setup of the system for building rpms&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dnf -y install fedora-packager fedora-review
$ sudo usermod -a -G mock vagrant
$ fedora-packager-setup
$ kinit surajd@FEDORAPROJECT.ORG
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;my-notes&#34;&gt;My Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Start reading from: &lt;a href=&#34;https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/Packagers_Guide/index.html&#34;&gt;Fedora packager&amp;rsquo;s guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some macros come from &lt;code&gt;redhat-rpm-config&lt;/code&gt; and &lt;code&gt;fedora-rpm-macros&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo rpm -ql redhat-rpm-config-45-1.fc25.noarch
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see all macros on the system:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm --showrc
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Koji - fedora build system&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fedora&lt;/code&gt; uses &lt;code&gt;fedpkg&lt;/code&gt; for doing builds, while &lt;code&gt;rpmbuild&lt;/code&gt; is for &lt;code&gt;CentOS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To get general info about the package&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm -qip ./x86_64/namaskar-1-1.fc25.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ less namaskar-1-1.fc25.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see what are the dependencies of the package&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm -qp --requires ./noarch/namaskar-1-1.fc25.noarch.rpm
/bin/bash
rpmlib(CompressedFileNames) &amp;lt;= 3.0.4-1
rpmlib(FileDigests) &amp;lt;= 4.6.0-1
rpmlib(PayloadFilesHavePrefix) &amp;lt;= 4.0-1
rpmlib(PayloadIsXz) &amp;lt;= 5.2-1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see what packages include your package as dependency&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm -qp --provides ./noarch/namaskar-1-1.fc25.noarch.rpm
namaskar = 1-1.fc25
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;After you think the spec is ready and before you push it to build&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fedpkg --release f25 lint
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Doing local mock build&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fedpkg --release f25 mockbuild
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Doing build in fedora build system, koji&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fedpkg --release f25 scratch-build --target f25 --srpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Running fedora-review&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fedpkg --release f25 srpm
$ fedora-review -n namaskar
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Decompress a package, &lt;a href=&#34;https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/Packagers_Guide/sect-Packagers_Guide-Format_of_the_Archived_Files.html&#34;&gt;src&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm2cpio kompose-0.1.0-0.1.git8227684.el7.src.rpm | cpio -ivdm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpmdev-extract kompose-0.4.0-0.1.git4e3300c.fc27.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Various ways to query package: &lt;a href=&#34;https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/Packagers_Guide/sect-Packagers_Guide-Querying_Packages.html&#34;&gt;src&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To download source as mentioned in the &lt;code&gt;Source0&lt;/code&gt; tag, use:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ spectool -g kompose.spec
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To validate the rpmspec if it is error free&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpmlint kompose.spec
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ref&#34;&gt;Ref:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Yum and RPM Tricks &lt;a href=&#34;https://wiki.centos.org/TipsAndTricks/YumAndRPM&#34;&gt;https://wiki.centos.org/TipsAndTricks/YumAndRPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating RPM Packages with Fedora &lt;a href=&#34;https://fedoraproject.org/wiki/How_to_create_an_RPM_package&#34;&gt;https://fedoraproject.org/wiki/How_to_create_an_RPM_package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inside the Spec File, Directives For the &lt;code&gt;%files&lt;/code&gt; list &lt;a href=&#34;http://ftp.rpm.org/max-rpm/s1-rpm-inside-files-list-directives.html&#34;&gt;http://ftp.rpm.org/max-rpm/s1-rpm-inside-files-list-directives.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to get sponsored into the packager group &lt;a href=&#34;https://fedoraproject.org/wiki/How_to_get_sponsored_into_the_packager_group&#34;&gt;https://fedoraproject.org/wiki/How_to_get_sponsored_into_the_packager_group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/projectatomic/adb-utils/blob/master/README.adoc#steps-to-build-the-src-rpm&#34;&gt;Doing local builds help from adb-utils repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using Mock to test package builds &lt;a href=&#34;https://fedoraproject.org/wiki/Using_Mock_to_test_package_builds&#34;&gt;https://fedoraproject.org/wiki/Using_Mock_to_test_package_builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Packaging:RPMMacros &lt;a href=&#34;https://fedoraproject.org/wiki/Packaging:RPMMacros?rd=Packaging/RPMMacros&#34;&gt;https://fedoraproject.org/wiki/Packaging:RPMMacros?rd=Packaging/RPMMacros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/carlwgeorge/status/846892384570916866&#34;&gt;Tweet about using &lt;code&gt;rpmdev-extract&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Intellij Shortcuts</title>
      <link>http://suraj.io/post/intellij-shortcuts/</link>
      <pubDate>Fri, 17 Mar 2017 14:41:51 +0530</pubDate>
      
      <guid>http://suraj.io/post/intellij-shortcuts/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a living document and will be updated as I discover new things.&lt;/p&gt;

&lt;h2 id=&#34;shortcuts&#34;&gt;Shortcuts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + A&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find any action in IDE&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find in Path&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Open project navigator.
You can search here, just start typing here, after the project navigator window is opened.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shift + Insert&lt;/code&gt; in Project window&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here you can add new file to the project. The filename could be the entire path, so the intermediate directories will be created for you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + N&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find a struct or class definition by name.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + N&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find a file by name.
If you type file name and number seprated by number it will take you to the line in that file. e.g. &lt;code&gt;main.go:6&lt;/code&gt; This will take you to line 6 in &lt;code&gt;main.go&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + N&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find any symbol in the project. Here symbol means mainly type.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shift + Shift&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Search anything anywhere.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + F4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Close section that is active.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Tab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Switcher to switch between open items&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jump to definition.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find usage of that element in project. Or find declaration of a variable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + P&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find type of a variable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + cursor up/down&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Navigate the code window up and down&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + D&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Duplicate a line or selection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Delete a line or selection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Comment/Uncomment out with line comment, a line or selected block.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Comment/Uncomment out with block comment, a line or selected block.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + Shift + cursor up/down&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Move line or selection up/down.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + -&amp;gt;&lt;/code&gt; or &lt;code&gt;Alt + &amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Switch tabs of open files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Show recently openend files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + A&lt;/code&gt; &amp;lsquo;Scratch files&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need files that are not part of project but need to test something.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + F12&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hide all the windows and make editor full screen and press again to go back to having all the windows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;View + Enter Distraction Free mode&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will only keep editor rest everything goes away.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + &amp;lt;-&lt;/code&gt; or &lt;code&gt;Ctrl + Shift + -&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When in the project navigation window you can resize it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + W&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Select a word, press again and select a line, then select entire line then entire block, then entire outcasting block and so on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shift + Alt + up/down cursor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a line or block of code is selected and wanna move up and down.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + V&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see your clipboard history&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + mouse click in location&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To have multiple cursors. To get out of this mode just press &lt;code&gt;escape&lt;/code&gt; key.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + J&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When pressed on a word, it finds the next occurrence of the word and puts a cursor there. So I can edit mutiple occurrences of same word simultaneously.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Alt + I&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Select a block of code and get indentation right.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Alt + L&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reformat the code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + Enter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Goto a string and press this key and then you can do language injection. So you can tell intellij to interpret that string as &lt;code&gt;json&lt;/code&gt; or something like that.
So this helps in adding markup languages as string as a part of code. Also you can inject &lt;code&gt;regular expression&lt;/code&gt; and then check if the string is validated
against the regular expressions you put in.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So when a recommendation is opened up and if you press above key combination, the word is completed but if you keep pressing those keys the recommendation
rotates through all the recommendation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + J&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recommend templates, if there are any pre-defined.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Auto complete the current statement.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + F12&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Navigate file structure, you can start typing and search for things. And then by pressing the enter key you can jump to the definition.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + 7&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similar functionality as above only difference is that it opens in a side bar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + A&lt;/code&gt; &amp;lsquo;annotate&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Start annotation to see who made changes on each line. From here you can copy the revision number and then search it in the &amp;lsquo;version control&amp;rsquo; window.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + F12&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Terminal in IDE&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + 9&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Version Control window&lt;/p&gt;

&lt;h2 id=&#34;notes-and-tips&#34;&gt;Notes and Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In code you can write TODOs and FIXME and then IDE can identify them and you can write code later on in there.&lt;/li&gt;
&lt;li&gt;There is a plugin called as &amp;lsquo;Presentation Assistant&amp;rsquo; which shows what keys did you type&lt;/li&gt;
&lt;li&gt;In the project window(side bar), select &lt;em&gt;Auto Scroll from Source&lt;/em&gt; so when you are moving from one file to another it shows in the project side bar where that file is right now.&lt;/li&gt;
&lt;li&gt;When navigating in the project side bar, to start editing certain file press function key &lt;code&gt;F4&lt;/code&gt;. Press &lt;code&gt;Enter&lt;/code&gt; to just view it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other-receipes&#34;&gt;Other receipes&lt;/h2&gt;

&lt;h4 id=&#34;compare-branches&#34;&gt;Compare branches&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Press &lt;code&gt;Ctrl + Shift + A&lt;/code&gt; to open the action window, search for &lt;code&gt;branches&lt;/code&gt;, open branches window. Also can be done &lt;a href=&#34;https://www.jetbrains.com/help/pycharm/2016.1/accessing-git-branches-popup-menu.html&#34;&gt;as&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Once branch pop-window is open, select with what branch you wanna compare current checked out branch and select &lt;code&gt;compare&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It will open up a window with all changes, in top tabs select &lt;code&gt;diff&lt;/code&gt;, then select a file you wanna compare.&lt;/li&gt;
&lt;li&gt;Above steps are also given &lt;a href=&#34;https://www.jetbrains.com/help/pycharm/2016.1/merging-deleting-and-comparing-branches.html&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ref&#34;&gt;Ref:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vsyT-7n5-1I&#34;&gt;IntelliJ IDEA Tutorial - Shortcuts to Ditch Your Mouse Today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/eq3KiAH4IBI&#34;&gt;42 IntelliJ IDEA Tips and Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Packaging &#39;kompose&#39; for centos paas sig</title>
      <link>http://suraj.io/post/packaging-kompose-for-centos-paas-sig/</link>
      <pubDate>Wed, 15 Mar 2017 14:16:43 +0530</pubDate>
      
      <guid>http://suraj.io/post/packaging-kompose-for-centos-paas-sig/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a living document and will be updated from time to time.&lt;/p&gt;

&lt;p&gt;Following are steps to package kompose for &lt;a href=&#34;https://wiki.centos.org/SpecialInterestGroup/PaaS&#34;&gt;CentOS PAAS SIG&lt;/a&gt;. CentOS PAAS SIG is a repository of packages where rpms related to OpenShift and eco-system around it are delivered.&lt;/p&gt;

&lt;h2 id=&#34;setup-your-machine&#34;&gt;Setup your machine&lt;/h2&gt;

&lt;p&gt;Install packages needed&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum update -y &amp;amp;&amp;amp; \
sudo yum install -y epel-release &amp;amp;&amp;amp; \
sudo yum install -y rpm-build go redhat-rpm-config make \
                    gcc byobu rpmlint rpmdevtools centos-packager
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setup certs&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;centos-cert -u surajd -n
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;make-sure-your-rpmspec-is-error-free&#34;&gt;Make sure your rpmspec is error free&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rpmlint kompose.spec
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;building-kompose-srpm&#34;&gt;Building kompose srpm&lt;/h2&gt;

&lt;p&gt;There are two ways to build &lt;code&gt;srpm&lt;/code&gt; either build it locally or the ones that is built in koji for &lt;code&gt;epel&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;build-rpms-locally&#34;&gt;Build rpms locally&lt;/h3&gt;

&lt;p&gt;Before you begin make sure you have setup the local directory structure:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf ~/rpmbuild/
mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
echo &#39;%_topdir %(echo $HOME)/rpmbuild&#39; &amp;gt; ~/.rpmmacros
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update the rpm spec and get source code using it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;spectool -g kompose.spec
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Move the source to appropriate location&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp kompose-* ~/rpmbuild/SOURCES/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start local build&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rpmbuild -ba kompose.spec --define &amp;quot;dist .el7&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once above exits with status code 0, you can find the &lt;code&gt;RPM&lt;/code&gt;s:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ll ~/rpmbuild/RPMS/x86_64/
total 9724
-rw-rw-r--. 1 vagrant vagrant 9956072 May 26 09:37 kompose-0.7.0-0.1.el7.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;SRPM&lt;/code&gt;s can be found at:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ll ~/rpmbuild/SRPMS/
total 4828
-rw-rw-r--. 1 vagrant vagrant 4941880 May 26 09:37 kompose-0.7.0-0.1.el7.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See if dependencies are properly set&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpm -qpR ~/rpmbuild/RPMS/x86_64/kompose-*
git
libc.so.6()(64bit)
libc.so.6(GLIBC_2.2.5)(64bit)
libpthread.so.0()(64bit)
libpthread.so.0(GLIBC_2.2.5)(64bit)
libpthread.so.0(GLIBC_2.3.2)(64bit)
rpmlib(CompressedFileNames) &amp;lt;= 3.0.4-1
rpmlib(FileDigests) &amp;lt;= 4.6.0-1
rpmlib(PayloadFilesHavePrefix) &amp;lt;= 4.0-1
rpmlib(PayloadIsXz) &amp;lt;= 5.2-1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Try installing it locally and test it as mentioned in &lt;a href=&#34;http://suraj.io/post/test-kompose/&#34;&gt;http://suraj.io/post/test-kompose/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;pull-sprm&#34;&gt;Pull sprm&lt;/h3&gt;

&lt;p&gt;For release 0.3.0, I pulled SRPM from:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://kojipkgs.fedoraproject.org//packages/kompose/0.3.0/0.1.git135165b.el7/src/kompose-0.3.0-0.1.git135165b.el7.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;build-the-rpm-on-cbs-from-src-rpm&#34;&gt;Build the rpm on cbs from src.rpm&lt;/h2&gt;

&lt;p&gt;CBS is a community build system for SpecialInterestGroup members. It allows to build packages with Koji against CentOS5, CentOS6 and CentOS7.&lt;/p&gt;

&lt;h3 id=&#34;trying-a-scratch-build-on-cbs&#34;&gt;Trying a scratch build on CBS&lt;/h3&gt;

&lt;p&gt;Do a scratch build on CBS in &lt;code&gt;paas7-openshift-common-release&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cbs build --scratch paas7-openshift-common-el7 ~/rpmbuild/SRPMS/kompose-*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can download the rpm built here to test on CentOS machine.&lt;/p&gt;

&lt;h3 id=&#34;making-an-actual-release&#34;&gt;Making an actual release&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cbs build paas7-openshift-common-el7 ~/rpmbuild/SRPMS/kompose-*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once build is done successfully goto build page and download the rpm that is built for &lt;code&gt;x86_64&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The page where builds were listed: &lt;a href=&#34;https://cbs.centos.org/koji/taskinfo?taskID=181452&#34;&gt;https://cbs.centos.org/koji/taskinfo?taskID=181452&lt;/a&gt;
The page where this particular build happened and where I had download link to rpm: &lt;a href=&#34;https://cbs.centos.org/koji/buildinfo?buildID=17249&#34;&gt;https://cbs.centos.org/koji/buildinfo?buildID=17249&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://cbs.centos.org/kojifiles/packages/kompose/0.7.0/0.1.el7/x86_64/kompose-0.7.0-0.1.el7.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Try to install this rpm and see if it works on CentOS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install -y epel-release
yum install -y wget jq make

wget http://cbs.centos.org/kojifiles/packages/kompose/0.7.0/0.1.el7/x86_64/kompose-0.7.0-0.1.el7.x86_64.rpm

yum install -y kompose-0.7.0-0.1.el7.x86_64.rpm

git clone https://github.com/kubernetes-incubator/kompose/
cd kompose
make test-cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If everything is okay, Tag it into testing,
Verify that whatever you built last cbs is the good, the output should be version you wanted, and not the old one.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cbs latest-build paas7-openshift-common-candidate kompose
Build                                     Tag                   Built by
----------------------------------------  --------------------  ----------------
kompose-0.7.0-0.1.el7                     paas7-openshift-common-candidate  surajd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tag the build output of above command to testing&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cbs tag-pkg paas7-openshift-common-testing kompose-0.7.0-0.1.el7
Created task 181472
Watching tasks (this may be safely interrupted)...
181472 tagBuild (noarch): closed

181472 tagBuild (noarch) completed successfully
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verify it is in testing&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cbs latest-build paas7-openshift-common-testing kompose
Build                                     Tag                   Built by
----------------------------------------  --------------------  ----------------
kompose-0.7.0-0.1.el7                     paas7-openshift-common-testing  surajd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run whatever tests you want to verify that it&amp;rsquo;s a good build.
It takes anywhere from 5 to 30 minutes for the rpm to make it into testing
&lt;a href=&#34;http://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin/&#34;&gt;http://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install centos-release-openshift-origin
yum -y --enablerepo=centos-openshift-origin-testing install kompose
yum install -y epel-release
yum install -y jq make

git clone https://github.com/kubernetes-incubator/kompose/
cd kompose
make test-cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check if the package is in testing&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cbs latest-build paas7-openshift-common-testing kompose
Build                                     Tag                   Built by
----------------------------------------  --------------------  ----------------
kompose-0.7.0-0.1.el7                     paas7-openshift-common-testing  surajd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tag it into release:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cbs tag-pkg paas7-openshift-common-release kompose-0.7.0-0.1.el7
Created task 181634
Watching tasks (this may be safely interrupted)...
181634 tagBuild (noarch): free
181634 tagBuild (noarch): free -&amp;gt; closed
  0 free  0 open  1 done  0 failed

181634 tagBuild (noarch) completed successfully
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it is populated, it will show up in the repos, install it as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install -y centos-release-openshift-origin
yum install -y kompose
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ref&#34;&gt;Ref:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Install the SRPM and then Build from the Specfile &lt;a href=&#34;https://wiki.centos.org/HowTos/RebuildSRPM&#34;&gt;https://wiki.centos.org/HowTos/RebuildSRPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set Up an RPM Build Environment under CentOS &lt;a href=&#34;https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment&#34;&gt;https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dustymabe/fedpkg-kompose/blob/a3400c73843986693dbdc831de6de7f3a029f783/notes.txt&#34;&gt;Kompose build instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CentOS PaaS SIG &lt;a href=&#34;https://wiki.centos.org/SpecialInterestGroup/PaaS&#34;&gt;https://wiki.centos.org/SpecialInterestGroup/PaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CentOS SIGs &lt;a href=&#34;https://wiki.centos.org/SpecialInterestGroup&#34;&gt;https://wiki.centos.org/SpecialInterestGroup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CBS &lt;a href=&#34;https://wiki.centos.org/HowTos/CommunityBuildSystem&#34;&gt;https://wiki.centos.org/HowTos/CommunityBuildSystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.centos.org/HowTos/CentosPackager&#34;&gt;Building in CBS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/projectatomic/adb-utils/blob/master/README.adoc#steps-to-build-the-src-rpm&#34;&gt;RPM help from adb-utils repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Testing &#39;fedora&#39; and &#39;CentOS&#39; kompose package</title>
      <link>http://suraj.io/post/test-kompose/</link>
      <pubDate>Tue, 14 Mar 2017 00:31:57 +0530</pubDate>
      
      <guid>http://suraj.io/post/test-kompose/</guid>
      <description>

&lt;p&gt;I generally do &lt;code&gt;kompose&lt;/code&gt; package testing for fedora and CentOS. So here are the steps I follow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: All the commands that start with &lt;code&gt;#&lt;/code&gt; are inside the container.&lt;/p&gt;

&lt;h2 id=&#34;fedora&#34;&gt;Fedora&lt;/h2&gt;

&lt;p&gt;Spin the fedora test environment, let&amp;rsquo;s say fedora 25, I do it in containers.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -it fedora:25 bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once inside the container download the latest package from the testing repo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dnf --enablerepo updates-testing -y install kompose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make sure you download the latest release, there might be conditions that you download the old package.&lt;/p&gt;

&lt;p&gt;Now having the package is not enough, we need to run the functional tests, which is in the source repoistory. But before we clone the repo, we need some dependencies like &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;jq&lt;/code&gt;. So install them using packages.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dnf install -y jq make
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;centos&#34;&gt;CentOS&lt;/h2&gt;

&lt;p&gt;Spin the CentOS environment in container.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -it centos bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;epel-repo&#34;&gt;&lt;code&gt;epel&lt;/code&gt; repo&lt;/h3&gt;

&lt;p&gt;Install kompose from &lt;code&gt;epel-testing&lt;/code&gt; repo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install -y epel-release
yum --enablerepo=epel-testing -y install kompose
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;paas7-openshift-common-el7-repo&#34;&gt;&lt;code&gt;paas7-openshift-common-el7&lt;/code&gt; repo&lt;/h3&gt;

&lt;p&gt;For pulling package from testing repo in CentOS PAAS sig.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install centos-release-openshift-origin
yum -y --enablerepo=centos-openshift-origin-testing install kompose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And packages needed to run tests:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install -y epel-release
yum install -y jq make
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functional-tests&#34;&gt;Functional tests&lt;/h2&gt;

&lt;p&gt;Now lets get the functional tests:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes-incubator/kompose/
cd kompose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run tests:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test-cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all tests pass then just give a karma for it on the release page.&lt;/p&gt;

&lt;h2 id=&#34;ref&#34;&gt;Ref:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/surajssd/blog_contents/blob/master/content/post/test-kompose.md&#34;&gt;Original article on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>